export default "# 全局配置\n\n## Vue.config\n\n* silent\n* optionMergeStrategies\n* devtools\n* errorHandler\n* warnHandler\n* ignoredElements\n* keyCodes\n* performance\n* productionTip\n\n# 全局API\n\n* Vue.component\n* Vue.nextTick\n* Vue.directive\n* Vue.filter\n* Vue.mixin\n* Vue.extend\n* Vue.set\n* Vue.delete\n* Vue.use\n* Vue.compile\n* Vue.version\n\n# 选项\n\n```\nnew Vue({\n    // DOM\n    el: '#el',\n    template: '',\n    render: createElement => {},\n    renderError: (createElement, err) => {},\n\n    // 数据\n    props: [],\n    propsData: {},\n    data: {},\n    computed: {\n        extraData: function() {}\n    },\n    methods: {\n        extraData: function() {}\n    },\n    watch: {\n        extraData: function() {}\n    },\n    // 生命周期\n    beforeCreate: () => {},\n    created: () => {},\n    beforeMount: () => {},\n    mounted: () => {},\n    beforeUpdate: () => {},\n    updated: () => {},\n    activated: () => {},\n    deactivated: () => {},\n    beforeDestroy: () => {},\n    destroyed: () => {},\n    // 资源\n    directives: {} // 指令\n    filters: {}, // 过滤器\n    components: {} // 组件\n    // 组合\n    parent\n    mixins\n    extends\n    provide\n    inject\n    // 其他\n    name\n    delimiters\n    functional\n    model\n    inheritAttrs\n    comments: false, // 保留且渲染模板中的 HTML 注释\n})\n```\n\n> 过滤器 `filter` 只能用于两个地方: mustache 插值和 v-bind 表达式\n\n# 实例属性\n\n* .$refs\n* .$data\n* .$props\n* .$el\n* .$options\n* .$root\n* .$parent\n* .$children\n* .$attrs\n* .$listeners\n* .$slots\n* .$scopedSlots\n* .$isServer\n\n# 实例方法\n\n## 数据\n\n* .watch()\n* .set()\n* .delete()\n\n## 事件\n\n* .$on()\n* .$once()\n* .$off()\n* .$emit()\n\n## 生命周期\n\n* .$mount()\n* .$forceUpdate()\n* .$nextTick()\n* .$destroy()\n\n## 指令 directive\n\n* v-text\n* v-html\n* v-show\n* v-if\n* v-else\n* v-else-if\n* v-for\n* v-on -> `@`\n* v-bind => `:`\n* v-model\n* v-once\n* v-pre\n* v-cloak\n\n# 事件\n\n```\n// 传参\n<button v-on:click=\"hi\">button</button>\n<button @click=\"hi\">button</button>\n<button @click=\"hi('a')\">button</button>\n<button @click=\"hi('a', $event)\">button</button>\n\n> 事件对象: `$event`\n\n// 事件修饰符\n.stop\n.prevent\n.capture\n.self\n.once\n\n// 按键\n.enter\n.tab\n.delete\n.esc\n.space\n.up\n.down\n.left\n.right\n\n// 修饰键\n.ctrl\n.alt\n.shift\n.meta\n\n// 滑鼠按键修饰符\n.left\n.right\n.middle\n\n```\n"