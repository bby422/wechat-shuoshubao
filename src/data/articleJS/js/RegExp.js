export default "# 语法\n\n```\nvar patt = new RegExp(pattern,modifiers);\nvar patt = /pattern/modifiers;\n```\n\n| 修饰符 | 描述 |\n| --- | --- |\n| i | 忽略大小写 |\n| g | 全局匹配 |\n| m | 多行匹配 |\n\n| 方括号 | 描述 |\n| --- | --- |\n| [abc] | 任意一个括号内字符 |\n| [^abc] | 任何一个不在括号内的字符 |\n| [0-9] | 0-9的数字 |\n| [a-z] | a-z |\n| [A-Z] | A-Z |\n| [A-z] | A-z |\n| (red &#124; blue &#124; green) | 任何一项 |\n\n| 元字符 | 描述 |\n| --- | --- |\n| * | 单个字符(除了换行符 结束符) |\n| \\w | 单词字符 |\n| \\W | 非单词字符 |\n| \\d | 数字 |\n| \\D | 非数字 |\n| \\s | 空白符 |\n| \\S | 非空白符 |\n| \\b | 单词边界 |\n| \\B | 非单词边界 |\n| \\0 | NULL |\n| \\n | 换行符 |\n| \\f | 换页符 |\n| \\r | 回车符 |\n| \\t | 制表符 |\n| \\v | 垂直制表符 |\n\n| 量词 | 描述 |\n| --- | --- |\n| n+ | [1, +) |\n| n* | [0, +) |\n| n? | 0或1 |\n| n{x} | x |\n| n{x, y} | [x, y] |\n| n{x,} | [x, +) |\n| n$ | 以n结尾 |\n| ^n | 以n开头 |\n| ?=n | 其后紧接n |\n| ?!n | 其后没紧接n |\n\n| 原型 | 方法 |\n| ----- | ----------- |\n| RegExp.prototype | .test() <br> .exec() <br> .compile() |\n| String.prototype | .replace() <br> .split() <br> .search() <br> .match() |"