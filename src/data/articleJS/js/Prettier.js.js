export default "# Prettier.js\n\n```\nimport fs from 'fs'\nimport glob from 'glob'\nimport chalk from 'chalk'\nimport prettier from 'prettier'\n\nlet fileList = glob.sync('src/**/*.js')\n\nconst prettierOptions = {\n  \"useTabs\": false,\n  \"tabWidth\": 4,\n  \"printWidth\": 1000,\n  \"singleQuote\": true, // 单引号\n  \"semi\": true, // 分号\n  \"trailingComma\": \"none\", // 尾逗号\n  \"bracketSpacing\": false, // true: { foo: bar }; false: {foo: bar}\n  \"jsxBracketSameLine\": false, // 将 > 放在同一行\n  \"parser\": \"babylon\", // 'babylon' | 'flow' | 'json' | 'typescript' | 'postcss' | 'json' | 'graphql' | 'markdown'\n  \"insertPragma\": false, // 在顶部插入注释 /** @format */\n  \"arrowParens\": \"avoid\" // 'avoid': x => x; 'always': (x) => x\n}\n\nconst timeInfo = `prettier 共处理${fileList.length}个文件, 共耗时`\nconsole.time(timeInfo)\nconst prettierFile = src => new Promise((resolve, reject) => {\n  fs.readFile(src, (err, buffer) => {\n    if (err) {\n      reject(err)\n    } else {\n      const str = buffer.toString()\n      try {\n        const str2 = prettier.format(str, prettierOptions)\n        fs.writeFileSync(src, str2)\n        console.log(src)\n        resolve(src)\n      } catch (e) {\n        reject([e, src])\n      }\n    }\n  })\n})\n\nPromise\n  .all(fileList.map(v => prettierFile(v)))\n  .then(() => console.timeEnd(timeInfo))\n  .catch(([e, src]) => {\n    console.log(`${chalk.red('请检查文件: ')}${chalk.blue(src)}`)\n    console.log(e)\n  })\n```\n\n# Referrence\n\n> https://www.npmjs.com/package/prettier\n"