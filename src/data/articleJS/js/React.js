export default "# ReactDOM\n\n## ReactDOM.render()\n\n```\nReactDOM.render(\n  <h1>Hello, world!</h1>,\n  document.getElementById('app')\n);\n```\n\n## ReactDOM.findDOMNode()\n\n```\nReactDOM.findDOMNode(this.refs[refName])\n```\n\n# React\n\n## props\n\n* static defaultProps = {}\n* this.props[propsName]\n* this.props.children\n\n## special props\n\n```\nkey\nref\ndangerouslySetInnerHTML={{__html: ''}}\n{...props}\n```\n\n## state\n\n* this.state = {}\n* this.state[stateName]\n* this.setState({})\n\n> 1. 组件类的第一个字母必须大写\n> 2. 组件类只能包含一个顶层标签\n\n# Component Lifecycle\n\n## Mounting [已插入真实 DOM]\n\n* constructor()\n* componentWillMount()\n* render()\n* componentDidMount()\n\n## Updating [正在被重新渲染]\n\n* componentWillReceiveProps()\n* shouldComponentUpdate()\n* componentWillUpdate(object nextProps, object nextState)\n* render()\n* componentDidUpdate(object prevProps, object prevState)\n\n## Unmounting [已移出真实 DOM]\n\n* componentWillUnmount()\n\n# Other APIs\n\n## Component APIs\n\n* setState()\n* forceUpdate()\n\n## Class Properties\n\n* defaultProps\n* displayName\n* propTypes\n\n## Instance Properties\n\n* props\n* state\n\n```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\n\nexport default class extends React.Component {\n  static defaultProps = {\n\n  }\n  static propTypes = {\n    visible: propTypes.bool.isRequired\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n)\n```\n\n# PropTypes\n\n* React.PropTypes.array\n* React.PropTypes.bool\n* React.PropTypes.func\n* React.PropTypes.number\n* React.PropTypes.object\n* React.PropTypes.string\n* React.PropTypes.node\n* React.PropTypes.element\n* React.PropTypes.instanceOf(Message)\n* React.PropTypes.oneOf([])\n* React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number, React.PropTypes.instanceOf(Message) ])\n* React.PropTypes.arrayOf(React.PropTypes.number)\n* React.PropTypes.objectOf(React.PropTypes.number)\n* React.PropTypes.shape({color: React.PropTypes.string, fontSize: React.PropTypes.number })\n* React.PropTypes.func.isRequired\n* React.PropTypes.any.isRequired\n* customProp: (props, propName, componentName) => {}\n\n# Event\n\n> SyntheticEvent 、 nativeEvent\n\n* boolean bubbles\n* boolean cancelable\n* DOMEventTarget currentTarget\n* boolean defaultPrevented\n* number eventPhase\n* boolean isTrusted\n* DOMEvent nativeEvent\n* void preventDefault()\n* boolean isDefaultPrevented()\n* void stopPropagation()\n* boolean isPropagationStopped()\n* DOMEventTarget target\n* number timeStamp\n* string type\n\n\n| Event Type | Event names | Properties |\n| - | - | - |\n| Mouse | onClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp |  altKey button buttons clientX clientY ctrlKey getModifierState(key) metaKey pageX pageY relatedTarget screenX screenY shiftKey |\n| Wheel | onWheel | deltaMode deltaX deltaY deltaZ |\n| Keyboard | onKeyDown onKeyPress onKeyUp | altKey charCode ctrlKey getModifierState(key) key keyCode locale location metaKey repeat shiftKey which |\n| Focus | onFocus onBlur | DOMEventTarget relatedTarget |\n| Form | onChange onInput onSubmit ||\n| Touch | onTouchCancel onTouchEnd onTouchMove onTouchStart | altKey changedTouches ctrlKey getModifierState(key) metaKey shiftKey targetTouches touches |\n| Selection | onSelect ||\n| Clipboard | onCopy onCut onPaste | DOMDataTransfer clipboardData |\n| UI | onScroll | detail view |\n| Image | onLoad onError | |\n| Media | onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting | |\n| Transition | onTransitionEnd | propertyName pseudoElement elapsedTime |\n| Animation | onAnimationStart onAnimationEnd onAnimationIteration | animationName pseudoElement elapsedTime |\n| Composition | onCompositionEnd onCompositionStart onCompositionUpdate | string data |\n\n\n#  Form event\n\n* event.target.value      input、textarea\n* event.target.checked    checkbox、radio\n* event.target.selected   option\n\n# Top-Level API\n\n## React\n\n* React.Component\n* React.createClass\n* React.createElement\n* React.cloneElement\n* React.createFactory\n* React.isValidElement\n* React.DOM\n* React.PropTypes\n* React.Children\n  * React.Children.map\n  * React.Children.forEach\n  * React.Children.count\n  * React.Children.only\n  * React.Children.toArray\n\n## ReactDOM\n\n* ReactDOM.render\n* ReactDOM.findDOMNode\n* ReactDOM.unmountComponentAtNode\n\n## ReactDOMServer\n* ReactDOMServer.renderToString\n* ReactDOMServer.renderToStaticMarkup\n\n## Term\n\n* React Elements\n* Factories\n* React Nodes\n* React Components\n\n# DOM Elements [#](https://facebook.github.io/react/docs/dom-elements.html#all-supported-html-attributes)\n\n## Differences In Attributes\n\n```\nstyle\nclassName\nhtmlFor\nonChange\ndangerouslySetInnerHTML\nvalue defaultValue\nchecked defaultChecked\nselected\n```\n\n## HTML Attributes\n\n```\nclassName\nhtmlFor\nformAction\nformMethod\nreadOnly\nautoComplete\nautoFocus\nmaxLength\nminLength\ncontentEditable\ncolSpan\nrowSpan\nmarginHeight\nmarginWidth\n```\n"