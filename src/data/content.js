export default {
    "html/Label": "# Base\r\n\r\n* <\\!DOCTYPE>\r\n* html\r\n* head\r\n* title\r\n* meta\r\n* base\r\n* body\r\n* style\r\n* link\r\n* script\r\n\r\n# DIV\r\n\r\n* div\r\n* article\r\n* section\r\n* aside\r\n* header\r\n* main\r\n* nav\r\n* menu\r\n* footer\r\n* dialog\r\n\r\n# SPAN\r\n\r\n* a\r\n* p\r\n* img\r\n* span\r\n* br,hr\r\n* h1,h2,h3,h4,h5,h6\r\n* b,i,em,var,del,strong\r\n* sub,sup,big,small\r\n\r\n# Form\r\n\r\n* form\r\n* button\r\n* input\r\n* label\r\n* textarea\r\n* select,optgroup,option\r\n* fieldset,legend（没啥用）\r\n\r\n# TABLE\r\n\r\n* table\r\n* caption\r\n* thead\r\n* tbody\r\n* tfoot\r\n* tr\r\n* th\r\n* td\r\n* colgroup\r\n* col\r\n\r\n# LIST\r\n\r\n* ul\r\n* ol\r\n* li\r\n* dl\r\n* dt\r\n* dd\r\n\r\n# Never Use\r\n\r\n* hgroup\r\n* summary\r\n* details\r\n* figcaption\r\n* figure",
    "html/Html_entity": "| 符号 | 实体名称|\n|---|---|\n|   | `&nbsp;` |\n| < | `&lt;` |\n| > | `&gt;` |\n| &#124; | `&#124;` |\n| & | `&amp;` |\n| \" | `&quot;` |\n| ' | `&apos;` |\n| × | `&times;` |\n| ÷ | `&divide;` |\n| § | `&sect;` |\n| © | `&copy;` |\n| ® | `&reg;` |\n| ™ | `&trade;` |",
    "html/Html5": "# 语义化标签\n\n* header\n* main\n* footer\n* article\n* section\n* aside\n* menu\n* nav\n* dialog\n* figure\n* figcaption\n\n# JS加载\n\n* defer\n* async\n\n# 输入类型\n\n* number\n* tel\n* url\n* email\n* search\n* range\n\n# 表单属性\n\n* required\n* placeholder\n* autocomplete\n* pattern\n* formcation\n\n# 音频、视频\n\n* audio\n* vedio\n\n# querySelector\n\n* querySelector()\n* querySelectorAll()\n* getElementsByClassName()\n\n# classList\n\n* length\n* item\n* add()\n* remove()\n* toggle()\n* contains()\n\n# dataset\n\n# JSON\n\n* JSON.parse()\n* JSON.stringify()\n\n\n# 历史管理\n\n* window.onhashchange\n* window.onpopstate\n* history.pushState()\n* history.replaceState()\n\n# Storage\n\n* window.onstorage\n* window.sessionStorage\n* window.localStorage\n* getItem()\n* setItem()\n* removeItem()\n* clear()\n\n# Geolocation\n\n* navigator.geolocation.getCurrentPosition()\n* navigator.geolocation.watchPosition()\n* navigator.geolocation.clearWatch()\n\n# FormData\n\n# FileReader\n\n# Blob\n\n# WebSocket\n\n# Canvas\n\n# WebGL\n\n# SVG\n\n# Orientation\n\n# Fullscreen\n\n# Notification\n\n# 离线应用\n\n* AddType text/cache-manifest .manifest\n* manifest=\"xxxxx.manifest\"\n* CACHE MANIFEST",
    "html/Event": "# Window\n\n* onresize\n* onredo\n* onundo\n* onload\n* onunload\n* onbeforeunload\n* onerror\n* onhaschange\n* onpopstate\n* onstorage\n* onmessage\n* onpagehide\n* onpageshow\n* ononline\n* onoffline\n* onafterprint\n* onbeforeprint\n\n# Form\n\n* oninput\n* onselect\n* onchange\n* onfocus\n* onblur\n* onsubmit\n* onreset\n* onformchange\n* onforminput\n* oninvalid\n\n# Keyboard\n\n* onkeydown\n* onkeypress\n* onkeyup\n\n# Mouse\n\n* onclick\n* ondblclick\n* oncontextmenu\n* onscroll\n* onmousewheel\n* onmousedown\n* onmousemove\n* onmouseout\n* onmouseover\n* onmouseup\n\n# Drag\n\n* ondrag\n* ondragend\n* ondragenter\n* ondragleave\n* ondragover\n* ondragstart\n* ondrop\n\n# Media\n\n* onplay\n* onplaying\n* onpause\n* onprogress\n* onerror\n* onabort\n* onwaiting\n* oncanplay\n* oncanplaythrough\n* ondurationchange\n* onemptied\n* onended\n* onloadeddata\n* onloadedmetadata\n* onloadstart\n* onratechange\n* onreadystatechange\n* onseeked\n* onseeking\n* onstalled\n* onsuspend\n* ontimeupdate\n* onvolumechange",
    "html/Meta": "# charset\n```\n<meta charset=\"utf-8\">\n```\n\n# tdk\n\n```\n<meta name=\"description\" content=\"\">\n<meta name=\"keywords\" content=\"\">\n<meta name=\"author\" content=\"\">\n```\n\n# favicon icon\n\n```\n<link rel=\"shortcut icon\" type=\"image/ico\" href=\"/favicon.ico\">\n```\n\n# RSS\n\n```\n<link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"/rss.xml\">\n```\n\n# viewport\n\n```\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<meta name=\"viewport\" content=\"width=375\">\n<meta name=\"viewport\" content=\"width=414\">\n```\n\n# 360\n\n```\n<meta name=\"renderer\" content=\"webkit\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n```\n\n# 百度禁止转码\n\n```\n<meta http-equiv=\"Cache-Control\" content=\"no-siteapp\">\n```\n\n# IOS\n\n## 设备\n\n```\n<meta name=\"apple-mobile-web-app-title\" content=\"\">\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"> // default black black-translucent\n<meta name=\"format-detection\" content=\"telephone=no\">\n```\n\n## 图标\n\n```\n<link rel=\"apple-touch-icon-precomposed\" href=\"\">\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"57x57\" href=\"\">\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"72x72\" href=\"\">\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"114x114\" href=\"\">\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"120x120\" href=\"\">\n<link rel=\"apple-touch-icon-precomposed\" sizes=\"180×180\" href=\"\">\n```\n\n## 启动动画\n\n```\n<link rel=\"apple-touch-startup-image\" sizes=\"768x1004\" href=\"/splash-screen-768x1004.png\">\n<link rel=\"apple-touch-startup-image\" sizes=\"1536x2008\" href=\"/splash-screen-1536x2008.png\">\n<link rel=\"apple-touch-startup-image\" sizes=\"1024x748\" href=\"/Default-Portrait-1024x748.png\">\n<link rel=\"apple-touch-startup-image\" sizes=\"2048x1496\" href=\"/splash-screen-2048x1496.png\">\n<link rel=\"apple-touch-startup-image\" href=\"/splash-screen-320x480.png\">\n<link rel=\"apple-touch-startup-image\" sizes=\"640x960\" href=\"/splash-screen-640x960.png\">\n<link rel=\"apple-touch-startup-image\" sizes=\"640x1136\" href=\"/splash-screen-640x1136.png\">\n<link rel=\"apple-touch-startup-image\" href=\"launch6.png\" media=\"(device-width: 375px)\">\n<link rel=\"apple-touch-startup-image\" href=\"launch6plus.png\" media=\"(device-width: 414px)\">\n```\n\n# 移动端\n\n```\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\">\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n<meta name=\"format-detection\" content=\"telephone=no, email=no\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\">\n<!-- 删除苹果默认的工具栏和菜单栏 -->\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n<!-- 设置苹果工具栏颜色 -->\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n<!-- 忽略页面中的数字识别为电话，忽略email识别 -->\n<meta name=\"format-detection\" content=\"telphone=no, email=no\">\n<!-- 启用360浏览器的极速模式(webkit) -->\n<meta name=\"renderer\" content=\"webkit\">\n<!-- 避免IE使用兼容模式 -->\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n<!-- uc强制竖屏 -->\n<meta name=\"screen-orientation\" content=\"portrait\">\n<!-- QQ强制竖屏 -->\n<meta name=\"x5-orientation\" content=\"portrait\">\n<!-- UC强制全屏 -->\n<meta name=\"full-screen\" content=\"yes\">\n<!-- QQ强制全屏 -->\n<meta name=\"x5-fullscreen\" content=\"true\">\n<!-- UC应用模式 -->\n<meta name=\"browsermode\" content=\"application\">\n<!-- QQ应用模式 -->\n<meta name=\"x5-page-mode\" content=\"app\">\n```\n\n",
    "css/Total": "# Box\r\n\r\n* width / height\r\n* margin / padding\r\n* border\r\n* box-sizing : content-box / border-box\r\n* display\r\n\r\n# Float\r\n\r\n* float: left / right\r\n* clear: none / left / right / both / inherit\r\n\r\n# Position\r\n\r\n* position : static / inhreit / relative / absolute / fixed\r\n* z-index\r\n* top / right / bottom / left\r\n\r\n\r\n# [Selector](#css/selector)\r\n\r\n# Typesetting\r\n\r\n* color\r\n* background\r\n* font\r\n* line-height\r\n* text-decoration\r\n* text-indent\r\n* text-shadow\r\n* opacity\r\n* visibility\r\n* list-style\r\n* outline\r\n* box-shadow\r\n* border-radius\r\n* overflow\r\n* overflow-x\r\n* overflow-y\r\n* min-width\r\n* min-height\r\n* max-width\r\n* max-height\r\n* content\r\n* vertical-align\r\n* text-align\r\n* border-collapse:collapse\r\n* border-spacing:none\r\n* white-space\r\n* word-spacing\r\n* word-break\r\n* word-wrap\r\n\r\n# Media Query\r\n\r\n* @media\r\n\r\n# Animation\r\n\r\n* animation\r\n\r\n# Transition\r\n\r\n* transition\r\n\r\n# 2D / 3D\r\n\r\n* transform\r\n\r\n# other\r\n\r\n* -webkit-user-select: none\r\n* -webkit-input-placeholder: color\r\n* -webkit-text-size-adjust: none\r\n* -webkit-touch-callout: none\r\n* -webkit-overflow-scrolling: touch\r\n* -webkit-tap-highlight-color: transparent\r\n* ::-webkit-scrollbar\r\n* ::-webkit-full-screen\r\n",
    "css/Selector": "# 基础\r\n\r\n* \\*\r\n* \\#\r\n* \\.\r\n* ele\r\n\r\n# 层级\r\n\r\n* ,\r\n* 空格\r\n* \\>\r\n* \\+\r\n* ~\r\n\r\n# 属性\r\n\r\n* [attr]\r\n* [attr=val]\r\n* [attr*=val]\r\n* [attr~=val]\r\n* [attr^=val]\r\n* [attr$=val]\r\n* [attr\\|=val]\r\n\r\n# 伪类\r\n\r\n* :link\r\n* :active\r\n* :hover\r\n* :visited\r\n\r\n# 伪元素\r\n\r\n* :before\r\n* :after\r\n* :first-letter\r\n* :first-line\r\n\r\n# 索引\r\n\r\n* :first-child\r\n* :last-child\r\n* :only-child\r\n* :nth-child(n)\r\n* :nth-last-child(n)\r\n* :first-of-type\r\n* :last-of-type\r\n* :only-of-type\r\n* :nth-of-type(n)\r\n* :nth-last-of-type(n)\r\n\r\n# 表单\r\n\r\n* :focus\r\n* :enabled\r\n* :disabled\r\n* :checked\r\n\r\n# 其他\r\n\r\n* :not()\r\n* :empty\r\n* :target\r\n* :selection\r\n\r\n# webkit\r\n\r\n* :-webkit-scrollbar\r\n* :-webkit-full-screen\r\n* :-webkit-touch-callout\r\n* -webkit-text-size-adjust\r\n* -webkit-input-placeholder\r\n* -webkit-overflow-scrolling\r\n* -webkit-tap-highlight-color\r\n* -webkit-filter\r\n\r\n# Never Use\r\n\r\n* :root\r\n* :lang()",
    "css/Flex": "# Flex\n\n* display: flex | inline-flex\n\n# 容器\n\n* flex-direction: row | row-reverse | column | column-reverse\n* flex-wrap: nowrap | wrap | wrap-reverse\n* flex-flow: <flex-direction> || <flex-wrap>\n* justify-content: flex-start | flex-end | center | space-between | space-around\n* align-items: flex-start | flex-end | center | baseline | stretch\n* align-content: flex-start | flex-end | center | space-between | space-around | stretch\n\n# 项目\n\n* order: <integer> /* default 0 */\n* flex-grow: <number> /* default 0 */\n* flex-shrink: <number> /* default 1 */\n* flex-basis: <length> | auto /* default auto */\n* flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n* align-self: auto | flex-start | flex-end | center | baseline | stretch\n\n# Referrence\n\n- [阮一峰 flex-grammar](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)",
    "js/ES8": "# String\n\n* String.prototype.padStart()\n* String.prototype.padEnd()\n\n# Object\n\n* Object.values()\n* Object.entries()\n* Object.getOwnPropertyDescriptors()\n\n# async\n\n```\nconst asyncFunc = async function() {\n  await promise\n}\n\nconst asyncFunc = async () => {\n  await promise\n}\n\nasyncFunc().then()\n```\n",
    "js/ES7": "* 幂运算符 m ** n\n* Array.prototype.includes()\n",
    "js/ES6": "# const let\r\n\r\n* const\r\n* let\r\n\r\n# 解构赋值\r\n\r\n* String\r\n* Number\r\n* Boolean\r\n* Array\r\n* 函数参数\r\n* 对象\r\n\r\n# Iterator\r\n\r\n* for...of\r\n* String、Array、array-like、Set、Map、WeakSet、WeakMap\r\n\r\n# typeof\r\n\r\n* number、string、boolean、undefined、function、object、`symbol`\r\n\r\n# String\r\n\r\n* for...of\r\n* String.prototype.includes()\r\n* String.prototype.startsWith()\r\n* String.prototype.endsWith()\r\n* String.prototype.repeat()\r\n* String.raw()\r\n* template string\r\n* tagged template\r\n* String.prototype.at()\r\n* String.prototype.normalize()\r\n\r\n# Number\r\n\r\n* Number.isFinite()\r\n* Number.isNaN()\r\n* Number.parseInt()\r\n* Number.parseFloat()\r\n* Number.isInteger()\r\n* Number.EPSILON\r\n* Number.isSafeInteger()\r\n\r\n# Array\r\n\r\n* Array.from()\r\n* Array.of()\r\n* Array.prototype.copyWithin(target, start = 0, end = this.length)\r\n* Array.prototype.find()\r\n* Array.prototype.findIndex((value, index, arr) => {})\r\n* Array.prototype.fill()\r\n* Array.prototype.keys()\r\n* Array.prototype.values()\r\n* Array.prototype.entries()\r\n* 数组的空位\r\n* 数组推导\r\n\r\n# Math\r\n\r\n* Math.trunc()\r\n* Math.sign()\r\n* Math.cbrt()\r\n* Math.clz32()\r\n* Math.imul()\r\n* Math.fround()\r\n* Math.hypot()\r\n* Math.expm1()\r\n* Math.log1p()\r\n* Math.log10()\r\n* Math.log2()\r\n* Math.sinh()\r\n* Math.cosh()\r\n* Math.tanh()\r\n* Math.asinh()\r\n* Math.acosh()\r\n* Math.atanh()\r\n* 指数运算符 (**)\r\n\r\n# Function\r\n\r\n* 参数默认值\r\n* rest参数 (...变量名)\r\n* 扩展运算符 (...)\r\n* Function.prototype.name\r\n* 箭头函数 (=>)\r\n* 函数绑定 (::)\r\n* 尾调用\r\n* 尾递归\r\n* 尾逗号\r\n\r\n# Object\r\n\r\n* obj[method].name\r\n* Object.is()    // +0 != 0, NaN == NaN\r\n* Object.assign()\r\n* Object.getOwnPropertyDescriptor()\r\n* Object.setPrototypeOf()\r\n* Object.getPrototypeOf()\r\n* Object.prototype.__proto__\r\n* 扩展运算符(...)\r\n\r\n# Set [WeakSet]\r\n\r\n* new Set()\r\n* new Set([]) // array or array-like\r\n\r\n## property\r\n\r\n* Set.prototype.size\r\n\r\n## method\r\n\r\n* Set.prototype.add(value)\r\n* Set.prototype.delete(value)\r\n* Set.prototype.has(value)\r\n* Set.prototype.clear()\r\n\r\n## Iterator\r\n\r\n* Set.prototype.keys()\r\n* Set.prototype.values()\r\n* Set.prototype.entries()\r\n* Set.prototype.forEach()\r\n\r\n> Array.from(setInstance)  // Set -> Array\r\n> ...   // Set -> flat to parameter in Function or menber in Array\r\n\r\n\r\n# Map [WeakSet]\r\n\r\n## property\r\n\r\n* Map.prototype.size\r\n\r\n## method\r\n\r\n* Map.prototype.get(key)\r\n* Map.prototype.set(key, value)\r\n* Map.prototype.has(key)\r\n* Map.prototype.delete(key)\r\n* Map.prototype.clear()\r\n\r\n## Iterator\r\n\r\n* Set.prototype.keys()\r\n* Set.prototype.values()\r\n* Set.prototype.entries()\r\n* Set.prototype.forEach()\r\n\r\n\r\n# Referrence\r\n\r\n> [http://es6.ruanyifeng.com/](http://es6.ruanyifeng.com/)\r\n>\r\n> [http://kangax.github.io/compat-table/es5/](http://kangax.github.io/compat-table/es5/)\r\n>\r\n> [http://kangax.github.io/compat-table/es6/](http://kangax.github.io/compat-table/es6/)\r\n",
    "js/ES5": "# String\r\n\r\n* String.prototype.trim()\r\n* 访问字符串的属性\r\n\r\n# Array\r\n\r\n* Array.isArray()\r\n* Array.prototype.indexOf()\r\n* Array.prototype.lastIndexOf()\r\n* Array.prototype.every()\r\n* Array.prototype.some()\r\n* Array.prototype.forEach()\r\n* Array.prototype.map()\r\n* Array.prototype.filter()\r\n* Array.prototype.reduce()\r\n* Array.prototype.reduceRight()\r\n\r\n# Date\r\n\r\n* Date.now()\r\n* Date.prototype.toISOString()\r\n* Date.prototype.toJSON()\r\n\r\n\r\n# JSON\r\n\r\n* JSON.parse()\r\n* JSON.stringify()\r\n\r\n# Function\r\n\r\n* Function.prototype.bind()\r\n\r\n# Object\r\n\r\n* Object.keys()\r\n* Object.create()\r\n* Object.defineProperty()\r\n* Object.defineProperties()\r\n* Object.getPrototypeOf()\r\n* Object.getOwnPropertyNames()\r\n* Object.getOwnPropertyDescriptor()\r\n* Object.seal()\r\n* Object.freeze()\r\n* Object.preventExtensions()\r\n* Object.isSealed()\r\n* Object.isFrozen()\r\n* Object.isExtensible()\r\n",
    "js/Vue": "# 全局配置\n\n## Vue.config\n\n* silent\n* optionMergeStrategies\n* devtools\n* errorHandler\n* warnHandler\n* ignoredElements\n* keyCodes\n* performance\n* productionTip\n\n# 全局API\n\n* Vue.component\n* Vue.nextTick\n* Vue.directive\n* Vue.filter\n* Vue.mixin\n* Vue.extend\n* Vue.set\n* Vue.delete\n* Vue.use\n* Vue.compile\n* Vue.version\n\n# 选项\n\n```\nnew Vue({\n    // DOM\n    el: '#el',\n    template: '',\n    render: createElement => {},\n    renderError: (createElement, err) => {},\n\n    // 数据\n    props: [],\n    propsData: {},\n    data: {},\n    computed: {\n        extraData: function() {}\n    },\n    methods: {\n        extraData: function() {}\n    },\n    watch: {\n        extraData: function() {}\n    },\n    // 生命周期\n    beforeCreate: () => {},\n    created: () => {},\n    beforeMount: () => {},\n    mounted: () => {},\n    beforeUpdate: () => {},\n    updated: () => {},\n    activated: () => {},\n    deactivated: () => {},\n    beforeDestroy: () => {},\n    destroyed: () => {},\n    // 资源\n    directives: {} // 指令\n    filters: {}, // 过滤器\n    components: {} // 组件\n    // 组合\n    parent\n    mixins\n    extends\n    provide\n    inject\n    // 其他\n    name\n    delimiters\n    functional\n    model\n    inheritAttrs\n    comments: false, // 保留且渲染模板中的 HTML 注释\n})\n```\n\n> 过滤器 `filter` 只能用于两个地方: mustache 插值和 v-bind 表达式\n\n# 实例属性\n\n* .$refs\n* .$data\n* .$props\n* .$el\n* .$options\n* .$root\n* .$parent\n* .$children\n* .$attrs\n* .$listeners\n* .$slots\n* .$scopedSlots\n* .$isServer\n\n# 实例方法\n\n## 数据\n\n* .watch()\n* .set()\n* .delete()\n\n## 事件\n\n* .$on()\n* .$once()\n* .$off()\n* .$emit()\n\n## 生命周期\n\n* .$mount()\n* .$forceUpdate()\n* .$nextTick()\n* .$destroy()\n\n## 指令 directive\n\n* v-text\n* v-html\n* v-show\n* v-if\n* v-else\n* v-else-if\n* v-for\n* v-on -> `@`\n* v-bind => `:`\n* v-model\n* v-once\n* v-pre\n* v-cloak\n\n# 事件\n\n```\n// 传参\n<button v-on:click=\"hi\">button</button>\n<button @click=\"hi\">button</button>\n<button @click=\"hi('a')\">button</button>\n<button @click=\"hi('a', $event)\">button</button>\n\n> 事件对象: `$event`\n\n// 事件修饰符\n.stop\n.prevent\n.capture\n.self\n.once\n\n// 按键\n.enter\n.tab\n.delete\n.esc\n.space\n.up\n.down\n.left\n.right\n\n// 修饰键\n.ctrl\n.alt\n.shift\n.meta\n\n// 滑鼠按键修饰符\n.left\n.right\n.middle\n\n```\n",
    "js/React": "# ReactDOM\n\n## ReactDOM.render()\n\n```\nReactDOM.render(\n  <h1>Hello, world!</h1>,\n  document.getElementById('app')\n);\n```\n\n## ReactDOM.findDOMNode()\n\n```\nReactDOM.findDOMNode(this.refs[refName])\n```\n\n# React\n\n## props\n\n* static defaultProps = {}\n* this.props[propsName]\n* this.props.children\n\n## special props\n\n```\nkey\nref\ndangerouslySetInnerHTML={{__html: ''}}\n{...props}\n```\n\n## state\n\n* this.state = {}\n* this.state[stateName]\n* this.setState({})\n\n> 1. 组件类的第一个字母必须大写\n> 2. 组件类只能包含一个顶层标签\n\n# Component Lifecycle\n\n## Mounting [已插入真实 DOM]\n\n* constructor()\n* componentWillMount()\n* render()\n* componentDidMount()\n\n## Updating [正在被重新渲染]\n\n* componentWillReceiveProps()\n* shouldComponentUpdate()\n* componentWillUpdate(object nextProps, object nextState)\n* render()\n* componentDidUpdate(object prevProps, object prevState)\n\n## Unmounting [已移出真实 DOM]\n\n* componentWillUnmount()\n\n# Other APIs\n\n## Component APIs\n\n* setState()\n* forceUpdate()\n\n## Class Properties\n\n* defaultProps\n* displayName\n* propTypes\n\n## Instance Properties\n\n* props\n* state\n\n```\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\n\nexport default class extends React.Component {\n  static defaultProps = {\n\n  }\n  static propTypes = {\n    visible: propTypes.bool.isRequired\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n)\n```\n\n# PropTypes\n\n* React.PropTypes.array\n* React.PropTypes.bool\n* React.PropTypes.func\n* React.PropTypes.number\n* React.PropTypes.object\n* React.PropTypes.string\n* React.PropTypes.node\n* React.PropTypes.element\n* React.PropTypes.instanceOf(Message)\n* React.PropTypes.oneOf([])\n* React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.number, React.PropTypes.instanceOf(Message) ])\n* React.PropTypes.arrayOf(React.PropTypes.number)\n* React.PropTypes.objectOf(React.PropTypes.number)\n* React.PropTypes.shape({color: React.PropTypes.string, fontSize: React.PropTypes.number })\n* React.PropTypes.func.isRequired\n* React.PropTypes.any.isRequired\n* customProp: (props, propName, componentName) => {}\n\n# Event\n\n> SyntheticEvent 、 nativeEvent\n\n* boolean bubbles\n* boolean cancelable\n* DOMEventTarget currentTarget\n* boolean defaultPrevented\n* number eventPhase\n* boolean isTrusted\n* DOMEvent nativeEvent\n* void preventDefault()\n* boolean isDefaultPrevented()\n* void stopPropagation()\n* boolean isPropagationStopped()\n* DOMEventTarget target\n* number timeStamp\n* string type\n\n\n| Event Type | Event names | Properties |\n| - | - | - |\n| Mouse | onClick onContextMenu onDoubleClick onDrag onDragEnd onDragEnter onDragExit onDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave onMouseMove onMouseOut onMouseOver onMouseUp |  altKey button buttons clientX clientY ctrlKey getModifierState(key) metaKey pageX pageY relatedTarget screenX screenY shiftKey |\n| Wheel | onWheel | deltaMode deltaX deltaY deltaZ |\n| Keyboard | onKeyDown onKeyPress onKeyUp | altKey charCode ctrlKey getModifierState(key) key keyCode locale location metaKey repeat shiftKey which |\n| Focus | onFocus onBlur | DOMEventTarget relatedTarget |\n| Form | onChange onInput onSubmit ||\n| Touch | onTouchCancel onTouchEnd onTouchMove onTouchStart | altKey changedTouches ctrlKey getModifierState(key) metaKey shiftKey targetTouches touches |\n| Selection | onSelect ||\n| Clipboard | onCopy onCut onPaste | DOMDataTransfer clipboardData |\n| UI | onScroll | detail view |\n| Image | onLoad onError | |\n| Media | onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting | |\n| Transition | onTransitionEnd | propertyName pseudoElement elapsedTime |\n| Animation | onAnimationStart onAnimationEnd onAnimationIteration | animationName pseudoElement elapsedTime |\n| Composition | onCompositionEnd onCompositionStart onCompositionUpdate | string data |\n\n\n#  Form event\n\n* event.target.value      input、textarea\n* event.target.checked    checkbox、radio\n* event.target.selected   option\n\n# Top-Level API\n\n## React\n\n* React.Component\n* React.createClass\n* React.createElement\n* React.cloneElement\n* React.createFactory\n* React.isValidElement\n* React.DOM\n* React.PropTypes\n* React.Children\n  * React.Children.map\n  * React.Children.forEach\n  * React.Children.count\n  * React.Children.only\n  * React.Children.toArray\n\n## ReactDOM\n\n* ReactDOM.render\n* ReactDOM.findDOMNode\n* ReactDOM.unmountComponentAtNode\n\n## ReactDOMServer\n* ReactDOMServer.renderToString\n* ReactDOMServer.renderToStaticMarkup\n\n## Term\n\n* React Elements\n* Factories\n* React Nodes\n* React Components\n\n# DOM Elements [#](https://facebook.github.io/react/docs/dom-elements.html#all-supported-html-attributes)\n\n## Differences In Attributes\n\n```\nstyle\nclassName\nhtmlFor\nonChange\ndangerouslySetInnerHTML\nvalue defaultValue\nchecked defaultChecked\nselected\n```\n\n## HTML Attributes\n\n```\nclassName\nhtmlFor\nformAction\nformMethod\nreadOnly\nautoComplete\nautoFocus\nmaxLength\nminLength\ncontentEditable\ncolSpan\nrowSpan\nmarginHeight\nmarginWidth\n```\n",
    "js/Redux": "# Redux\n\n* var store = Redux.createStore(function(state, action))\n* store.getState()\n* store.subscribe(function())\n* store.dispatch({type: 'TYPE_NAME'})",
    "js/React-Native": "# Getting Started\n\n> brew install node\n> \n> brew install watchman\n> \n> $ npm install -g react-native-cli\n>\n> react-native init AwesomeProject\n> \n> cd AwesomeProject\n> \n> react-native run-ios\n\n# Hello world\n\n```\nimport React, {Component} from 'react';\nimport {AppRegistry, Text} from 'react-native';\n\nclass Hello extends Component {\n  render() {\n    return (\n      <Text>Hello world!</Text>\n    );\n  }\n}\n\nAppRegistry.registerComponent('AwesomeProject', () => Hello);\n```\n\n# Component\n\n## react-native\n\n* AppRegistry\n* StyleSheet\n\n# base\n\n* View\n* ListView\n* ScrollView\n* Navigator\n* Text\n* Image\n* TextInput\n* TouchableHighlight\n\n* Animated\n* LayoutAnimation\n* TouchableOpacity\n",
    "js/Angular": "# 指令 ng-\n\n* ng-app\n* ng-model\n* ng-eventType\n* ng-controller\n\n> 指令都写在html标签中\n\n# 服务 $\n\n* $rootScope\n* $scope\n\n```\n$scope.$watch(str, function(newVal, oldVal) {} [, ifWatchAll])\n$scope.$watch(function(){})\n```\n\n* $timeout\n* $interval\n  * $interval.cancel()\n* $filter\n\n> 依赖注入：需要什么服务，就在形参列表中添加服务名, 服务都写在函数中\n\n* $timeout(function() {});\n* $interval(function() {});\n* $filter('filterName')(arg1, arg2, arg3);\n\n# 过滤器 filter\n\n* currency\n* number\n* date\n* json\n* limitTo\n* filter\n* orderBy\n* lowercase/uppercase\n\n> 写在 \\{ filter : arg1 : arg2 : arg3 \\} 中\n\n> \\| 称为 `管道`\n\n> `:` 后面是`参数`，多个参数用多个 `:`\n\n# 模块化\n\n* angular.module()\n* controller()\n* run()\n* filter()\n\n```\nvar mod1 = angular.module('appName', [需要依赖的模块数组]);\nmod1.controller('Aaa', ['$scope', '$rootScope', function($scope, $rootScope) {}]);\nmod1.run(['$rootScope', function($rootScope) {}]);\nmod1.filter('filterName', function(){\n  return function(str) {\n    return str\n  }\n});\n```\n\n# 工具方法\n\n* angular.module()\n* angular.bind()\n* angular.copy()\n* angular.extend()\n* angular.isNumber()\n* angular.isString()\n* angular.isUndefined()\n* angular.isDefined()\n* angular.isObject()\n* angular.isDate()\n* angular.isArray()\n* angular.isFunction()\n* angular.isElement()\n* angular.version\n* angular.equeals()\n* angular.forEach()\n* angular.element()\n* angular.identity()\n* angular.noop()\n* angular.lowercase()\n* angular.uppercase()\n* angular.bootstrap()\n* angular.injector()\n\n> angular.element() 底下有一堆的DOM操作函数，类似于jQuery\n\n# jqLite\n\n* angular.element()\n* prop()\n* attr() * Does not support functions as parameters\n* css() * Only retrieves inline-styles, does not call getComputedStyle()\n* hasClass()\n* addClass()\n* removeClass()\n* toggleClass()\n* clone()\n* after()\n* append()\n* prepend()\n* detach()\n* empty()\n* remove()\n* wrap()\n* replaceWith()\n* on() : Does not support namespaces, selectors or eventData\n* one() : Does not support namespaces or selectors\n* off() : Does not support namespaces or selectors\n* bind() : Does not support namespaces, selectors or eventData\n* unbind() : Does not support namespaces\n* triggerHandler() * Passes a dummy event object to handlers.\n* find() * Limited to lookups by tag name\n* eq()\n* children() * Does not support selectors\n* parent() * Does not support selectors\n* next() * Does not support selectors\n* ready()\n* contents()\n* data()\n* removeData()\n* val()\n* text()\n* html()\n* removeAttr()\n\n# 迭代指令\n* $index\n* $first\n* $middle\n* $last\n* $even\n* $odd\n* ng-repeat-start\n* ng-repeat-end\n\n# 事件指令\n\n* ng-click/dblclick\n* ng-mousedown/up\n* ng-mouseenter/leave\n* ng-mousemove/over/out\n* ng-keydown/up/press\n* ng-focus/blur\n* ng-submit\n* ng-selected\n* ng-change\n* ng-copy\n* ng-cut\n* ng-paste\n\n> `ng-change` 必须和 `ng-model` 同时存在\n\n# input指令\n\n* ng-disabled\n* ng-readonly\n* ng-checked\n* ng-value\n\n* ng-bind\n* ng-bind-template\n* ng-bind-html\n* ng-cloak\n* ng-non-bindable\n\n# 属性指令\n\n* ng-class\n* ng-style\n* ng-href\n* ng-src\n* ng-attr-(suffix)\n\n> 注：表达式必须在 `{}` 中，其他的指令必须是在字符串中\n\n# 样式指令\n\n* ng-show\n* ng-hide\n* ng-if\n* ng-swtich\n  * on\n  * default\n  * when\n* ng-open\n\n# DOM指令\n\n* ng-init\n* ng-include\n* ng-model\n  * ng-model-option\n  * updateOn\n* ng-controller\n  * as\n\n> `ng-model-option` 的值 \\{\\} 中\n\n# 标签指令\n\n* \\<a\\>\n* \\<select\\>\n  * ng-options\n  * for in\n* \\<textarea\\>\n* \\<input\\>\n* \\<form\\>\n\n# 表单验证\n\n* $valid\n* $invalid\n* $pristine\n* $dirty\n* $error\n* ng-minlength\n* ng-maxkength\n* ng-pattern\n\n```\nng-valid\nng-invalid\nng-pristine\nng-dirty\n```\n\n> 1. novalidate\n> 2. `name` 的方式进行查找\n> 3. 配合 `ng-model`\n\n# 自定义指令\n\ndirective (angular.module)\n\n```\nmod.directive('directiveName', function() {\n  return {\n    restrict: 'AECM',\n    replace: false | true,\n    transclude: false | true,\n    template: 'str',\n    templateUrl: 'url',\n    scope: false | true | {},\n    controller: ['$scope', function($scope) {}],\n    link: function(scope, element, attr, reController) {}\n  }\n});\n```\n\n* restrict\n  * A: attribute\n  * E: element\n  * C: class\n  * M: comment\n\n* transclude\n\n> 配合 `ng-transclude`\n\n* template / templateUrl : 模板\n* scope\n  * false\n  * true : 独立作用域\n  * {} : 隔离作用域 ： 传入数据\n    * 绑定策略\n    * @ : 绑定空字符串\n    * = : 绑定变量\n    * & : 绑定函数\n* controller : 定义共享属性和方法\n* link : DOM操作\n\n\n\n# $http服务\n\n* method : GET / POST / JSONP\n* url : ''\n* params: json\n* data : string / json\n* headers : object\n* transformRequest : fn\n* transformResponse : fn\n* cache : boolean / Cache object\n* timeout : number\n* widthCredentials : boolean\n\n# $location服务\n\n* absUrl()\n* path()\n* hash()\n* search()\n* replace()\n* host\n* port()\n* protocol()\n\n# $anchorScroll服务\n\n* $anchorScroll()\n\n# $cacheFactory服务\n\n```\nvar cache = $cacheFactory(name[, {capacity: num}])\n```\n\n* info()\n  * id\n  * size\n  * [capacity]\n* put(name, value)\n* get(name)\n* remove()\n\n# $log服务\n\n* log()\n* info()\n* warn()\n* error()\n\n# $interpolate服务\n\n# $q服务\n\n* defer()\n* resolve()\n* reject()\n* notify()\n* then()\n* promise\n\n> promise的实现\n\n# 供应商\n\n> 服务的相关初始配置操作\n\n* config()\n  * provider\n  * $interpolateProvider\n    * startSymbol()\n    * endSymbol()\n  * $logProvider\n    * debugEnabled()\n  * $anchorScrollProvider\n    * disableAutoScrolling()\n\n# factory 自定义服务\n\n```\nmod.factory('serviceName', ['', '', function() {\n  return {\n\n  }\n}]);\n```\n\n> 不能进行初始化配置，即没有供应商\n\n# provider 自定义服务\n\n```\nmod.provider('serviceName', [function() {\n  return {\n    $get: function() {\n\n    }\n  }\n}]);\n```\n\n> $get\n>\n> 可以使用供应商\n\n# constant / value\n\n> 都是定义常量，但constant可以使用config, 且不用加Provider后缀\n",
    "js/Reduce": "> 虽然你去百度上搜索 `reduce`, 发现只给了一个求和这一个demo, 但别以为reduce的作用就止于求和\n\n# Number\n\n## 求和\n\n```\nconst sum = arr => arr.reduce((prev, cur) => prev + cur)\n```\n\n## 极值\n\n```\nconst min = arr => arr.reduce((prev, cur) => Math.min(prev, cur))\nconst max = arr => arr.reduce((prev, cur) => Math.max(prev, cur))\n```\n\n## 阶乘\n\n```\nconst factorial = N => Array.from(Array(N), (v, i) => i + 1).reduce((prev, cur) => prev * cur)\n\nfactorial(5) // 120\n```\n\n# Array\n\n```\n// 需求\n// 数据源\nconst data = [\n  '1000001001',\n  '1000001002',\n  '1000001003',\n  '2000001009',\n  '2000001008',\n]\n// 需要得到\n{\n  '10000': ['1000001001', '1000001002', '1000001003'],\n  '20000': ['200001009', '200001008']\n}\n\nconst convertArrayToJson = arr => arr.reduce((prev, cur) => {\n  const short = cur.slice(0, 6)\n  const temp = prev[short]\n  if(temp) {\n    prev[short].push(cur)\n  }else {\n    prev[short] = [cur]\n  }\n  return prev\n}, {})\n\nconst ret = convertArrayToJson(data)\n```\n\n# Object\n\n## filter 筛选对象\n\n```\nconst filter = (json, attrs) => attrs.reduce((prev, cur) => {\n  prev[cur] = json[cur]\n  return prev\n}, {})\n\nconst data = {\n  name: 'shuoshubao',\n  age: 25,\n  sex: 1\n}\n\nconst filterData = filter(data, ['name', 'age'])\n// {name: 'shuoshubao', age: 25}\n```\n\n## omit 过滤对象\n\n```\nconst omit = (json, attrs) => Object.keys(data).filter(v => !attrs.includes(v)).reduce((prev, cur) => {\n  prev[cur] = json[cur]\n  return prev\n}, {})\n\nconst data = {\n  name: 'shuoshubao',\n  age: 25,\n  sex: 1\n}\n\nconst omitData = omit(data, ['name', 'age'])\n// {sex: 1}\n```\n",
    "js/Npm": "# touch ~/.npm-init.js\n\n```\nmodule.exports = {\n  \"name\": \"demo\",\n  \"version\": \"1.0.0\"\n}\n```\n\n> npm init -y\n",
    "js/Yarn": "# Yarn\n\n## Starting a new project\n\n> yarn init\n\n## Installing all the dependencies of project\n\n> yarn\n>\n> yarn install\n\n## Adding a dependency\n\n> yarn add [package]\n>\n> yarn add [package]@[version]\n>\n> yarn add [package]@[tag]\n\n## Updating a dependency\n\n> yarn upgrade [package]\n>\n> yarn upgrade [package]@[version]\n>\n> yarn upgrade [package]@[tag]\n\n# Removing a dependency\n\n> yarn remove [package]",
    "js/RegExp": "# 语法\n\n```\nvar patt = new RegExp(pattern,modifiers);\nvar patt = /pattern/modifiers;\n```\n\n| 修饰符 | 描述 |\n| --- | --- |\n| i | 忽略大小写 |\n| g | 全局匹配 |\n| m | 多行匹配 |\n\n| 方括号 | 描述 |\n| --- | --- |\n| [abc] | 任意一个括号内字符 |\n| [^abc] | 任何一个不在括号内的字符 |\n| [0-9] | 0-9的数字 |\n| [a-z] | a-z |\n| [A-Z] | A-Z |\n| [A-z] | A-z |\n| (red &#124; blue &#124; green) | 任何一项 |\n\n| 元字符 | 描述 |\n| --- | --- |\n| * | 单个字符(除了换行符 结束符) |\n| \\w | 单词字符 |\n| \\W | 非单词字符 |\n| \\d | 数字 |\n| \\D | 非数字 |\n| \\s | 空白符 |\n| \\S | 非空白符 |\n| \\b | 单词边界 |\n| \\B | 非单词边界 |\n| \\0 | NULL |\n| \\n | 换行符 |\n| \\f | 换页符 |\n| \\r | 回车符 |\n| \\t | 制表符 |\n| \\v | 垂直制表符 |\n\n| 量词 | 描述 |\n| --- | --- |\n| n+ | [1, +) |\n| n* | [0, +) |\n| n? | 0或1 |\n| n{x} | x |\n| n{x, y} | [x, y] |\n| n{x,} | [x, +) |\n| n$ | 以n结尾 |\n| ^n | 以n开头 |\n| ?=n | 其后紧接n |\n| ?!n | 其后没紧接n |\n\n| 原型 | 方法 |\n| ----- | ----------- |\n| RegExp.prototype | .test() <br> .exec() <br> .compile() |\n| String.prototype | .replace() <br> .split() <br> .search() <br> .match() |",
    "js/Code": "# 日期格式化\n\n\n## Date.prototype.toISOString\n\n```\nvar dt = new Date();\ndt.toISOString().slice(0, -5).replace(/[T]/g, ' ');\n```\n\n## RegExp\n\n```\nvar dt = new Date();\nvar date = [\n  [dt.getFullYear(), dt.getMonth() + 1, dt.getDate()].join('-'),\n  [dt.getHours(), dt.getMinutes(), dt.getSeconds()].join(':')\n].join(' ').replace(/(?=\\b\\d\\b)/g, '0');\n```\n\n## Date\n\n```\nfunction pad(s) {\n  return ('0' + s).slice(-2);\n}\nvar dt = new Date();\nvar date = dt.getFullYear() + '-' + pad(dt.getMonth() + 1) + '-' + pad(dt.getDate());\ndate += ' ';\ndate += pad(dt.getHours()) + ':' + pad(dt.getMinutes()) + ':' + pad(dt.getSeconds());\n```\n\n## 生成数组\n\n```\nArray.from(Array(N), (v, i) => i)\n```\n\n```\nArray.apply(null, {length: N}).map(Function.call, Number)\n```\n\n## 获取数组的最后一位\n\n```\narr.slice(-1)[0]\n```\n",
    "js/Canvas": "# 初始化\n\n```\nconst canvasDomEle = document.querySelector('#myCanvas')\nconst ctx = canvasDomEle.getContext('2d')\n```\n\n# 颜色、样式和阴影\n\n## 属性\n\n* fillStyle  // 设置或返回用于填充绘画的颜色、渐变或模式\n* strokeStyle  // 设置或返回用于笔触的颜色、渐变或模式\n* shadowColor  // 设置或返回用于阴影的颜色\n* shadowBlur  // 设置或返回用于阴影的模糊级别\n* shadowOffsetX  // 设置或返回阴影与形状的水平距离\n* shadowOffsetY  // 设置或返回阴影与形状的垂直距离\n\n```\nctx.fillStyle = color | gradient | pattern\nctx.strokeStyle = color | gradient | pattern\nctx.shadowColor = color\nctx.shadowBlur = number\nctx.shadowOffsetX = number\nctx.shadowOffsetY = number\n```\n\n## 方法\n\n* createLinearGradient()  // 创建线性渐变（用在画布内容上）\n* createRadialGradient()  // 创建放射状/环形的渐变（用在画布内容上）\n* addColorStop()  // 规定渐变对象中的颜色和停止位置\n* createPattern()  // 在指定的方向上重复指定的元素\n\n```\nconst gradient = ctx.createLinearGradient(x0, y0, x1, y1)\nconst gradient = ctx.createRadialGradient(x0, y0, r0, x1, y1, r1)\n\ngradient.addColorStop(stop, color) // stop: [0, 1]\n\nconst pattern = ctx.createPattern(imgDom, 'repeat | repeat-x | repeat-y | no-repeat')\n```\n\n# 线条样式\n\n## 属性\n\n* lineCap  // 设置或返回线条的结束端点样式\n* lineJoin  // 设置或返回两条线相交时，所创建的拐角类型\n* lineWidth  // 设置或返回当前的线条宽度\n* miterLimit  // 设置或返回最大斜接长度\n\n```\nctx.lineCap = 'butt | round | square'\nctx.lineJoin = 'miter | bevel | round' // 斜切 | 锥角 | 圆角\nctx.lineWidth = number\nctx.miterLimit = number // ctx.lineJoin = 'miter'\n```\n\n# 矩形\n\n## 方法\n\n* rect()  // 创建矩形\n* fillRect()  // 绘制\"被填充\"的矩形\n* strokeRect()  // 绘制矩形（无填充）\n* clearRect()  // 在给定的矩形内清除指定的像素\n\n```\nctx.rect(x, y, width, height)\nctx.fillRect(x, y, width, height)\nctx.strokeRect(x, y, width, height)\nctx.clearRect(x, y, width, height)\n```\n\n# 路径\n\n## 方法\n\n* beginPath()  // 起始一条路径，或重置当前路径\n* lineTo()  // 添加一个新点，然后在画布中创建从该点到最后指定点的线条\n* moveTo()  // 把路径移动到画布中的指定点，不创建线条\n* closePath()  // 创建从当前点回到起始点的路径\n\n* fill()  // 填充当前绘图（路径）\n* stroke()  // 绘制已定义的路径\n\n* clip()  // 从原始画布剪切任意形状和尺寸的区域\n\n* quadraticCurveTo()  // 创建二次贝塞尔曲线\n* bezierCurveTo()  // 创建三次贝塞尔曲线\n* arc()  // 创建弧/曲线（用于创建圆形或部分圆）\n* arcTo()  // 创建两切线之间的弧/曲线\n* isPointInPath()  // 如果指定的点位于当前路径中，则返回 true，否则返回 false\n\n```\nctx.beginPath()\nctx.lineTo(x, y)\nctx.moveTo(x, y)\nctx.closePath()\n\nctx.fill()\nctx.stroke()\n\nctx.clip()\n\nctx.quadraticCurveTo(cpx, cpy, x, y)\nctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)\n\nctx.arc(x, y, r, startAngle, endAngle, counterclockwise) // counterclockwise=true 逆时针\nctx.arcTo(x1, y1, x2, y2, r)\nctx.isPointInPath(x, y)\n```\n\n# 转换\n\n## 方法\n\n* scale()  // 缩放当前绘图至更大或更小\n* rotate()  // 旋转当前绘图\n* translate()  // 重新映射画布上的 (0,0) 位置\n* transform()  // 替换绘图的当前转换矩阵\n* setTransform()  // 将当前转换重置为单位矩阵然后运行 transform()\n\n```\nctx.scale(scaleWidth, scaleHeight)\nctx.rotate(angle)\nctx.transform(a, b, c, d, e, f) // x缩放 | x倾斜 | y缩放 | y倾斜 | x平移 | y平移\nctx.setTransform(a, b, c, d, e, f) // x缩放 | x倾斜 | y缩放 | y倾斜 | x平移 | y平移\n```\n\n# 文本\n\n## 属性\n\n* font  // 设置或返回文本内容的当前字体属性\n* textAlign  // 设置或返回文本内容的当前对齐方式\n* textBaseline  // 设置或返回在绘制文本时使用的当前文本基线\n\n```\nctx.font = 'font-style font-variant font-weight font-size/line-height font-family'\nctx.textAlign = 'center | end | left | right | start'\nctx.textBaseline = 'alphabetic | top | hanging | middle | ideographic | bottom'\n```\n\n## 方法\n\n* fillText()  // 在画布上绘制\"被填充的\"文本\n* strokeText()  // 在画布上绘制文本（无填充）\n* measureText()  // 返回包含指定文本宽度的对象\n\n```\nctx.fillText(text, x, y, maxWidth)\nctx.strokeText(text, x, y, maxWidth)\nconst measureTextWidth = ctx.measureText(text).width\n\nTextMetrics {\n    width [num]\n}\n```\n\n# 图像绘制\n\n## 方法\n\n* drawImage(imgDom, sx, sy, swidth, sheight, x, y, width, height)  // 向画布上绘制图像、画布或视频\n\n```\ndrawImage(imgDom, x, y)\ndrawImage(imgDom, x, y, width, height)\ndrawImage(imgDom, sx, sy, swidth, sheight, x, y, width, height)\n```\n\n# 像素操作 ImageData\n\n## 属性\n\n* width/height  // 返回 ImageData 对象的宽度/高度\n* data  // 返回一个对象，其包含指定的 ImageData 对象的图像数据\n\n```\nImageData {\n    width [int]\n    height [int]\n    data [Uint8ClampedArray]\n}\n```\n\n## 方法\n\n* createImageData()  // 创建新的、空白的 ImageData 对象\n* getImageData()  // 返回 ImageData 对象，该对象为画布上指定的矩形复制像素数据\n* putImageData()  // 把图像数据（从指定的 ImageData 对象）放回画布上\n\n```\nconst imgData = ctx.createImageData(width, height)\nconst imgData = ctx.createImageData(imgData0)\n\nconst imgData = ctx.getImageData(x, y, width, height)\n\nctx.putImageData(imgData, x, y, dirtyX, dirtyY, dirtyWidth, dirtyHeight)\n```\n\n# 其他\n\n* getContext()\n* toDataURL()\n* save()\n* restore()\n* createEvent()\n\n```\ncanvasDomEle.getContext('2d')\ncanvasDomEle.toDataURL()\n```\n\n# Reference\n\n* [http://www.runoob.com/tags/ref-canvas.html](http://www.runoob.com/tags/ref-canvas.html)\n",
    "js/Ajax": "# XMLHttpRequest\n\n```\nvar xhr = new XMLHttpRequest();\nxhr.open(method, url, asyn);\nxhr.onreadystatechange = () => {}\nxhr.send()\n```\n\n## XMLHttpRequest.prototype\n\n* .readyState\n* .response\n* .responseText\n* .responseType\n* .responseURL\n* .responseXML\n* .status\n* .statusText\n* .timeout\n* .withCredentials\n* .responseText\n* .onabort\n* .onerror\n* .onload\n* .onloadend\n* .onloadstart\n* .onprogress\n* .ontimeout\n* .onreadystatechange\n* .upload\n* .open()\n* .send()\n\n## XMLHttpRequestUpload.prototype\n\n* onabort\n* onerror\n* onload\n* onloadend\n* onloadstart\n* onprogress\n* ontimeout\n",
    "js/Fetch": "# Fetch\n\n## base\n\n```\nfetch(url)\nfetch(request)\nfetch(url, request)\n```\n\n## stream数据流\n\n> 数据流只能读取一次，一旦读取，数据流就空了。再次读取就不会得到结果。\n\n# Reference\n\n\n* [Body](#js/Body)\n* [Headers](#js/Headers)\n* [Request](#js/Request)\n* [Response](#js/Response)\n* [https://developer.mozilla.org/en-US/docs/Web/API/Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch)\n",
    "js/Body": "> The Body mixin of the Fetch API represents the body of the response/request, allowing you to declare what its content type is and how it should be handled.\n\n\n# Properties\n\n* bodyUsed (Read only)\n\n# Methods\n\n* arrayBuffer()\n* blob()\n* formData()\n* json()\n* text()\n\n\n# Reference\n\n* [https://developer.mozilla.org/en-US/docs/Web/API/Body](https://developer.mozilla.org/en-US/docs/Web/API/Body)",
    "js/Headers": "# Syntax\n\n```\nvar headers = new Headers(init)\n```\n\n# Method\n\n* get(name)\n* set(name, value)\n* append(name, value)\n* delete(name)\n* has(name)\n* keys()\n* values()\n* entries()\n\n# Reference\n\n* [https://developer.mozilla.org/en-US/docs/Web/API/Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers)",
    "js/Request": "# Syntax\n\n```\nvar request = new Request(url, option)\n```\n\n## option\n\n* method\n* headers\n* body\n* mode\n* credentials\n* cache\n* redirect\n* referrer\n* integrity\n\n# Property\n\n* bodyUsed\n* cache\n* context\n* credentials\n* headers\n* method\n* mode\n* referrer\n* referrerPolicy\n* url\n\n# Method\n\n[Body](#js/Body)\n\n# Reference\n\n* [https://developer.mozilla.org/en-US/docs/Web/API/Request](https://developer.mozilla.org/en-US/docs/Web/API/Request)\n",
    "js/Response": "# Syntax\n\n```\nvar response = new Response(body, init);\n```\n\n## Parameters\n\n### body\n\n* Blob\n* BufferSource\n* FormData\n* ReadableStream\n* URLSearchParams\n* USVString\n\n### init\n\n```\n{\n  status,\n  statusText,\n  headers\n}\n```\n\n# Properties\n\n* bodyUsed\n* headers\n* ok\n* redirected\n* status\n* statusText\n* type\n* url\n\n# Method\n\n* redirect(url, status)\n* error()\n* clone()\n* [Body](#js/Body)\n\n# Reference\n\n* [https://developer.mozilla.org/en-US/docs/Web/API/Response](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n",
    "js/Promise": "# status\n\n* pending\n* resolved | fulfilled\n* rejected\n\n# Promise.prototype\n\n* .then()\n* .catch()",
    "js/Event": "# beforeunload\n\n```\nwindow.onbeforeunload = function() {\n  return '真的要关闭么？别后悔！';\n}\n```\n\n> 只有当事件处理函数返回一个字符串的时候，才会生效\n\n\n# visibility\n\n```\ndocument.addEventListener(\"visibilitychange\", function() {\n  // dosomethings\n}, false);\n```\n\n#### 相关属性\n\n* document.hidden : 返回一个布尔值，表示当前是否被隐藏。\n* document.visibilityState\n  * visibile : 可见\n  * hidden : 不可见\n  * prerender : 正在渲染中，不可见\n\n\n# fullscreenchange\n\n```\ndocument.addEventListener(\"fullscreenchange\", function( event ) {\n  if (document.fullscreenElement) {\n    console.log('进入全屏');\n  } else {\n    console.log('退出全屏');\n  }\n}, false);\n```\n\n# fullscreenerror\n",
    "js/JQ": "# 选择器\n\n* *\n* .class\n* ele\n* \\#id\n* ,\n* >\n* +\n* ~\n\n# 属性\n\n* attr()\n* removeAttr()\n* prop()\n* removeProp()\n\n# 文本\n\n* text()\n* html()\n* val()\n\n# css\n\n* css()\n* addClass()\n* removeClass()\n* toggleClass()\n* hasClass()\n\n# 尺寸\n\n* width()、height()\n* outerWidth()、innerWidth()、outerHeight()、innerHeught()\n\n# 位置\n\n* offset()\n* offsetParent()\n* position()\n* scrollLeft()、scrollTop()\n\n# 数据\n\n* data()\n* removeData()\n* hasData()\n\n# 操作\n\n* append()、appendTo()\n* prepend()、prependTo()\n* after()、insertAfter()\n* before()、insertBefore()\n* remove()、empty()\n\n# 过滤\n\n* eq()、first()、last()\n* slice()、not()\n* filter()、map()\n* add()\n* has()\n* end()\n* each()\n\n# 层级\n\n* siblings()、next()、prev()\n* parent()、parents()、closest()\n* children()、find()\n\n# 事件\n\n* ready()\n* scroll()\n* resize()\n* click()\n* dbclick()\n* contextmenu()\n* hover()\n* mouseover()、mousemove()、mouseup()、mouseenter()、mouseleave()\n* focus()、blur()\n* change()\n* select()\n* submit()\n* keydown()、keypress()、keyup()\n\n# 事件绑定\n\n* on()\n* one()\n* off()\n* trigger()\n\n# 事件对象\n\n* pageX、pageY、timeStamp\n* target、data\n* type、which\n* preventDefault()\n* stopPropagation()\n\n\n# 效果\n\n* show()\n* hide()\n* toggle()\n* animation()、delay()、stop()\n* fadeIn()、fadeOut()、fadeTo()、fadeToggle()\n* slideDown()、slideUp()、slideToggle()\n\n# ajax\n\n* $.ajax()\n* $.get()\n* $.getJson()\n* $.getScript()\n* $.post()\n* $.load()\n\n# 工具\n\n* $.each()\n* $.map()\n* $.extend()\n* $.globalEval()\n* $.grep()\n* $.inArray()\n* $.isArray()\n* $.isEmptyObject()\n* $.isFunction()\n* $.Numeric()\n* $.isPlainObject()\n* $.isWindow()\n* $.makeArray()\n* $.merge()\n* $.noop()\n* $.now()\n* $.parseHTML()\n* $.parseJSON()\n* $.proxy()\n* $.trim()\n* $.type()\n* $.unique()\n\n# dom\n\n* length\n* get()\n* index()\n* toArray()",
    "js/DOM": "# Node\r\n\r\n* document.documentElement\r\n* document.head\r\n* document.body\r\n\r\n## 节点\r\n* Document\r\n* DocumentType\r\n* Element\r\n* Attribute\r\n* Text\r\n* DocumentFragment\r\n\r\n## 属性\r\n\r\n* nodeName\r\n* nodeType\r\n\r\n* ownerDocument\r\n* baseURI\r\n\r\n\r\n* childNodes\r\n* firstNode\r\n* lastChild\r\n* nextSibling\r\n* previousSibling\r\n* parentNode\r\n* parentElement\r\n\r\n* textContent\r\n* nodeValue\r\n\r\n## 方法\r\n\r\n* appendChild()\r\n* hasChildNodes()\r\n* insertBefore()\r\n* removeChild()\r\n* replaceChild()\r\n* cloneNode()\r\n* contains()\r\n* compareDocumentPosition()\r\n* isEqualNode()\r\n\r\n* normalize()\r\n\r\n\r\n# NodeList\r\n\r\n* Node.childNodes\r\n* document.querySelectorAll()\r\n* document.getElementsByTagName()\r\n\r\n## 属性\r\n\r\n* length\r\n* 数字索引\r\n\r\n## 方法\r\n\r\n* item(i)\r\n\r\n> item(i) 等价于 NodeList[i]\r\n\r\n\r\n# HTMLCollection\r\n\r\n* docuement.anchors\r\n* document.images\r\n* document.links\r\n* document.scripts\r\n* docuement.forms\r\n* document.embeds\r\n\r\n\r\n\r\n## 属性\r\n\r\n* length\r\n* 数字索引\r\n\r\n## 方法\r\n\r\n* item(i)\r\n* namedItem(name / id)\r\n\r\n> item(i) 等价于 NodeList[i]\r\n>\r\n> namedItem(name / id) 等价于 NodeList[name / id]\r\n\r\n# ParentNode, ChildNode\r\n\r\n* children\r\n* firstElementChild\r\n* lastElementChild\r\n* childElementCount\r\n* remove()\r\n* before()\r\n* after()\r\n* replaceWith()\r\n\r\n# Element\r\n\r\n## 属性\r\n\r\n* attributes\r\n* id\r\n* tagName\r\n* innerHTML\r\n* children\r\n* firstElementChild\r\n* lastElementChild\r\n* childElementCount\r\n* nextElementSibling\r\n* previousElementSibling\r\n* className\r\n* classList\r\n\t* add()\r\n\t* remove()\r\n\t* contains()\r\n\t* toggle()\r\n\t* item()\r\n\t* toString()\r\n* clientHeight\r\n* clientLeft\r\n* clientTop\r\n* clientWidth\r\n* scrollHeight\r\n* scrollWidth\r\n* scrollLeft\r\n* scrollTop\r\n\r\n* dataset\r\n* style\r\n\r\n* offsetParent\r\n* offsetTop\r\n* offsetLeft\r\n* tabindex\r\n\r\n## 方法\r\n* 选择器\r\n\t* querySelector()\r\n\t* querySelectorAll()\r\n\t* getElementsByTagName()\r\n\t* getElementsByClassName()\r\n* 节点\r\n\t* remove()\r\n\t* before()\r\n\t* after()\r\n\t* replaceWith()\r\n\t* closest()\r\n\t* matches()\r\n* 属性\r\n\t* hasAttribute()\r\n\t* getAttribute()\r\n\t* setAttribute()\r\n\t* removeAttribute()\r\n* scrollIntoView()\r\n* focus()\r\n* elementFromPoint()\r\n\r\n# table元素\r\n\r\n## 属性\r\n\r\n* caption\r\n* tHead\r\n* tBodies\r\n* tFoot\r\n* rows\r\n* rows.cells\r\n\r\n\r\n## 方法\r\n\r\n* createCaption\r\n* deleteCaption\r\n* createTHead\r\n* deleteTHead\r\n* insertRow\r\n* deleteRow\r\n* insertCell\r\n* deleteCell\r\n\r\n\r\n# EventTarget\r\n\r\n## 部署\r\n\r\n* window对象\r\n* document节点\r\n* Element节点\r\n* XMLHttpRequest\r\n\r\n## 方法\r\n\r\n* addEventListener()\r\n* removeEventListener()\r\n* dispatchEvent()\r\n",
    "js/Storage": "# 分类\n\n## sessionStorage、localStorage\n\n## 方法\n\n* getItem()\n* setItem()\n* removeItem()\n* clear()\n\n## 事件\n\n```\nwindow.addEventListener('storage', function(ev) {\n    // key : 修改或删除的key值，如果调用clear(),key为null\n    // newvalue : 新设置的值，如果调用removeStorage(),key为null\n    // oldvalue : 调用改变前的value值\n    // storageArea : 当前的storage对象\n    // url : 触发该脚本变化的文档的url\n}, false);\n```\n",
    "js/Fullscreenchange": "> 注意：以下全屏属性和方法以及事件，都需要加上前缀~\n\n# 方法\n\n* requestFullscreen()\n* exitFullscreen()\n\n> document 和 element 部署了 requestFullscreen()\n>\n> document 部署了 requestFullscreen()\n\n# 属性\n\n* document.fullscreenElement 返回正处于全屏状态的Element节点,如果没有则返回null\n* document.fullscreenEnableds 返回一个布尔值,表示当前文档是否可以切换到全屏状态\n\n\n# 事件\n\n* fullscreenchange\n\n```\ndocument.addEventListener(\"fullscreenchange\", function( event ) {\n  if (document.fullscreenElement) {\n    console.log('进入全屏');\n  } else {\n    console.log('退出全屏');\n  }\n}, false);\n```\n\n> 浏览器进入或离开全屏时触发\n\n* fullscreenerror\n\n```\ndocument.addEventListener(\"fullscreenerror\", function( event ) {\n  // dosomethings\n}, false);\n```\n\n> 浏览器无法进入全屏时触发，可能是技术原因，也可能是用户拒绝\n\n\n# 全屏状态的CSS\n\n```css\n:-webkit-full-screen {\n  // properties\n}\n:full-screen {\n  // properties\n}\n```\n",
    "js/Notification": "# 检测\n\n> window.Notification\n\n# 权限\n\n> Notification.permission\n\n* default\n* denied\n* granted\n\n# 询问\n\n> Notification.requestPermission(function(status) { // status: default、denied、granted })\n\n# 实例\n\n> new Notification(title, {})\n\n```\n属性\nvar n = new Notification(title, {\n    body: '',\n    icon: '',\n    tag: '',\n    lang: '',\n    dir: '', // auto, ltr, rtl\n});\n事件\nonshow\nonclose\nonerror\nonclick\n```\n\n# Demo\n\n```\nif(window.Notification && Notification.permission !== \"denied\") {\n  Notification.requestPermission(function(status) {    // 请求权限\n    if(status === 'granted') {\n      var n = new Notification('标题', {\n        body : '我是主体',\n        icon : 'https://assets-cdn.github.com/favicon.ico'\n      });\n    }\n  });\n}\n```\n",
    "js/Console": "> Object.keys(console)\n\n# Chrome\n\n* debug\n* error\n* info\n* log\n* warn\n* dir\n* dirxml\n* table\n* trace\n* group\n* groupCollapsed\n* groupEnd\n* clear\n* count\n* assert\n* markTimeline\n* profile\n* profileEnd\n* timeline\n* timelineEnd\n* time\n* timeEnd\n* timeStamp\n* memory\n\n# NodeJs\n\n* log\n* info\n* warn\n* error\n* dir\n* time\n* timeEnd\n* trace\n* assert\n",
    "node/overview": "# Core Module\n\n* global\n* fs\n* events\n* modules\n* console\n* error\n* assert\n* debugger\n* path\n* url\n* querystring\n* http\n* https\n* dns\n* domain\n* net\n* os\n* crypto\n* child_process\n* cluster\n* readline\n* repl\n* stream\n* string_decoder\n* tls\n* tty\n* dgram\n* v8\n* vm\n* zlib\n\n# Constructor\n\n* Buffer\n",
    "node/global": "# Global\n\n* Buffer\n* __dirname\n* __filename\n* setInterval(callback, delay[, ...args])\n* clearInterval(intervalObject)\n* setTimeout(callback, delay[, ...args])\n* clearTimeout(timeoutObject)\n* setImmediate(callback[, ...args])\n* clearImmediate(immediateObject)\n* console\n* exports\n* module\n* process\n* global\n* require()\n* require.cache\n* require.resolve()",
    "node/console": "* new Console(stdout[, stderr])\n* console.log([data][, ...args])\n* console.info([data][, ...args])\n* console.warn([data][, ...args])\n* console.error([data][, ...args])\n* console.time(label)\n* console.timeEnd(label)\n* console.dir(obj[, options])\n* console.assert(value[, message][, ...args])\n* console.trace(message[, ...args])",
    "node/buffer": "# Buffer\n\n## 已废弃\n\n* new Buffer(size)\n* new Buffer(string[, encoding])\n* new Buffer(buffer)\n* new Buffer(array)\n* new Buffer(arrayBuffer[, byteOffset [, length]])\n\n## new\n\n* Buffer.alloc(size[, fill[, encoding]])\n```\nsize <Integer>\nfill <Integer> | <String> | <Buffer>; default: 0\nencoding <String>; default: 'utf-8'\n```\n* Buffer.allocUnsafe(size)\n* Buffer.allocUnsafeSlow(size)\n* Buffer.byteLength(string[, encoding])\n* Buffer.compare(buf1, buf2)",
    "node/package-fav": "# Promise\n\n* axios\n* bluebird\n* request\n* isomorphic-fetch\n* whatwg-fetch\n* promise\n* q\n* async\n* co\n* superagent\n* fetch-jsonp\n\n# nodejs\n\n* n\n* debug\n* core-js\n* fs-utils (fs 模块的封装)\n* fs-extra\n* chokidar (fs.watch的封装)\n* mkdirp (mkdir -p)\n* touch (touch)\n* rimraf (rm -rf)\n* yazl (zip)\n* yauzl (unzip)\n* execa (child_process 替代品)\n* forever (nodejs的守护进程, nohup)\n* pm2\n* formidable (form data解析器, 文件上传)\n* glob (读取目录)\n* globby\n* minimatch\n* package (读取package.json数据)\n* config\n* prettier (代码格式化)\n\n# 工具\n\n* underscore\n* lodash\n* classnames\n* qs、querystring、querystringify (querystring解析器)\n* url-parse\n* parse-json\n* blueimp-md5\n* crypto-js\n* base64-js\n* base64-url\n* semver (版本号校验)\n* qrcode (生成二维码)\n* copy-to-clipboard\n* highlight.js (代码语法高亮)\n* prismjs (代码语法高亮)\n* file-type\n* http-server (nodejs开启本地服务器)\n* ms (将时间转化为毫秒数)\n* filesize (将数字转化为 B Kb)\n\n# babel\n\n* babel-cli\n* babel-core\n* babel-plugin-dynamic-import-node\n* babel-plugin-import\n* babel-plugin-minify-builtins\n* babel-plugin-minify-constant-folding\n* babel-plugin-minify-dead-code-elimination\n* babel-plugin-minify-guarded-expressions\n* babel-plugin-minify-infinity\n* babel-plugin-minify-mangle-names\n* babel-plugin-minify-numeric-literals\n* babel-plugin-minify-simplify\n* babel-plugin-minify-type-constructors\n* babel-plugin-syntax-function-bind\n* babel-plugin-syntax-trailing-function-commas\n* babel-plugin-transform-decorators-legacy\n* babel-plugin-transform-merge-sibling-variables\n* babel-plugin-transform-minify-booleans\n* babel-plugin-transform-object-rest-spread\n* babel-plugin-transform-remove-console\n* babel-plugin-transform-remove-undefined\n* babel-plugin-transform-runtime\n* babel-plugin-transform-undefined-to-void\n* babel-plugin-undeclared-variables-check\n* babel-polyfill\n* babel-preset-env\n* babel-preset-es2015\n* babel-preset-es2016\n* babel-preset-es2017\n* babel-preset-react\n* babel-preset-stage-0\n* babel-preset-stage-1\n* babel-preset-stage-2\n* babel-preset-stage-3\n* babel-register\n* babel-runtime\n\n# AST\n\n* escope\n* espree\n* estraverse (ast)\n* esprima (javascript 语法解析器) // http://esprima.org/\n* acorn (javascript 语法解析器)\n* acorn-jsx\n* babylon (javascript 语法解析器)\n* babel-template\n* babel-types\n* js-tokens\n* loose-envify\n* detective\n\n# webpack\n\n* assets-webpack-plugin\n* clean-webpack-plugin\n* copy-webpack-plugin\n* extract-text-webpack-plugin\n* html-webpack-harddisk-plugin\n* html-webpack-include-assets-plugin\n* html-webpack-plugin\n* prepack-webpack-plugin\n* webpack\n* webpack-dashboard\n* webpack-dev-server\n* webpack-parallel-uglify-plugin\n* webpack-spritesmith\n\n# html\n\n* parse5\n* cheerio (nodejs端的jq)\n* entities\n* html-entities\n* htmlparser\n* htmlparser2\n* domutils\n* css-what\n* css-select\n* domelementtype\n* dom-serializer\n* min-document\n* html-minifier\n* ejs\n* markdown-it\n* markdown\n\n# 命令行 cli\n\n* commander\n* yargs\n* yargs-parser\n* prompt\n* progress\n* chalk\n* opn (调用系统应用打开指定文件, 还可以监听程序的退出)\n* download\n* colors\n* table\n* cliui\n* text-table\n* cli-table2\n* child-process-promise\n\n# 图像处理\n\n* gm (GraphicsMagick + ImageMagick)\n* sharp\n* pngquant (图片压缩)\n* imagemin\n* image-size\n* tinify (Tinypng)\n* upng-js\n\n# 数据库\n\n* mongodb\n* mongoose\n* sqlite3\n\n# 第三方服务\n\n* aws-sdk (亚马逊云)\n* qiniu (七牛)\n* upyun (又拍云)\n",
    "tool/Git": "# Git使用介绍\n\n## 简介\n\n* Git是一个分布式版本控制软件, 2005年发布\n* 之前的版本管理工具: CVS、Subversion、SVN\n* 通过Git进行版本控制的软件源代码托管服务的主流网站有: Github、Gitlab、Bitbucket\n* 国产代码托管平台: [码云](https://git.oschina.net/)、[Coding](https://coding.net/)\n* Git工具: 命令行、编辑器集成、Github客户端、Bitbucket客户端(SourceTree)\n\n> Git很强大，也很简单。全部命令非常多，但完成日常工作只需要掌握 **极其少数** 的命令即可。其他的可以在工作中遇到调整再去学习。\n>\n> 建议初学者使用命令行操作, 使用客户端仅查看变化以便理解git的作用\n\n## 安装\n\n* [Git客户端](https://git-scm.com/download/)\n* Mac用户安装XCode之后执行git命令会提示安装\n\n## 作用\n\ngit的核心作用有两个：文件管理，多人协作。\n\n> 文件管理：git在不断的备份文件(git内部是使用diff存储每次的更改而非真的备份全部)。\n>\n> 多人协作：git通过代码合并、分支管理等功能让多名参与者能同时开发项目。\n\n贴个图感受下~\n\n![Git-Demo](http://oloqdvms7.bkt.clouddn.com/git-demo.png)\n\n## 核心概念\n\n* Workspace 工作区\n* Stage 暂存区\n* Repository 本地仓库\n* Remote 远程仓库\n\n![关系图](http://oloqdvms7.bkt.clouddn.com/git.png)\n\n> 总的来说，可以分为远程和本地。远程用于存储项目的最新状态，而本地用于个人开发。个人可以从远程拉取最新代码，也可以将自己的修改提交到远程。\n\n## 术语\n\n以下是一些学习git中会经常遇到的术语\n\n| 单词 | 释义 | 单词 | 释义 |\n| --- | --- | --- | --- |\n| repository | 版本库 | branch | 分支 |\n| checkout | 撤销 | reset | 重置 |\n| log | 日志 | merge | 合并 |\n| stash | 隐藏 | drop | 放弃 |\n| push | 推送 | pull | 拉取 |\n\n## Git常用命令\n\n### 安装和配置\n\n* git help：git子命令和核心概念一览表\n  * git help [subcommand]：查看指定git子命令的简介\n* git config\n  * git config --list 查看git配置列表\n  * git config -e [--global] 查看编辑git配置文件\n  * git config user.name \"YOUR_NAME\" 查看/设置用户名(当前项目)\n  * git config user.email \"YOUR_EMAIL\" 查看/设置用户邮箱(当前项目)\n  * git config --global user.name \"YOUR_NAME\" 查看/设置用户名(全局)\n  * git config --global user.email \"YOUR_EMAIL\" 查看/设置用户邮箱(全局)\n\n* vim ~/.gitconfig：git配置文件\n\n### 拉取项目\n\n* git clone [url]\n\n> 作为初学者，可以选择去Github去注册账号，然后自己新建一个项目随意折腾。\n\n### 文件操作\n\n* git add：添加文件或文件夹\n  * git add .\n  * git add [file1] [file2]\n  * git add [dir1] [dir2]\n* git rm：删除文件或文件夹\n  * git rm .\n  * git rm [file1] [file2]\n  * git rm --cached [file1] [file2] 从版本控制中移除但保留文件\n* git mv：重命名\n  * git mv [file1] [file2]\n\n> 有一个很普遍的误解是以为 git add `.` 中的 `.` 是指所有的意思。其实 `.` 是指相对路径，即当前目录。\n\n### 提交代码\n\n* git commit：提交指定文件或目录到本地仓库\n  * git commit -m '注释'\n  * git commit [file] [folder] -m '注释'\n  * git commit -am '注释'：提交工作区自上次commit之后的变化，直接到仓库区\n  * git commit --amend -m [message]：使用一次新的commit，替代上一次提交\n\n## 撤销\n\n* git checkout\n  * git checkout .\n  * git checkout [file1] [file2]\n  * git checkout [commit_id] [file]\n* git reset\n  * git reset [file1] [file2]\n  * git reset --hard\n  * git reset [commit_id]\n  * git reset --hard [commit_id]\n\n## 隐藏\n\n* git stash\n  * git stash\n  * git stash list\n  * git stash pop\n  * git stash drop\n\n> tip: 很容易忘记你曾经隐藏了修改，慎用~\n\n## 查看信息\n\n* git status\n* git diff\n  * git diff：显示工作区和工作区的差异\n  * git diff [file]：查看指定文件改动的地方(工作区与本地仓库文件内容的对比)\n* git log\n  * git log：显示commit历史\n  * git log --stat：显示commit历史，以及每次commit发生变更的文件\n  * git log -p [files]：显示指定文件的每次commit的diff\n  * git log -[number] --pretty --oneline：显示最近number次的log\n* git show\n  * git show [commit_id]：显示指定commit_id的diff\n  * git show [commit_id] [file]：显示指定commit_id下指定文件的diff\n\n### 分支\n\n* git branch\n  * git branch：显示本地分支列表\n  * git branch -r：显示远程分支列表\n  * git branch -a：显示本地分支列表+远程分支列表\n  * git branch [branch_name]：新建分支，不切换分支\n  * git branch [branch_name] [commit_id]：新建分支，并指向指定commit_id\n  * git branch -d [branch_name]：删除分支\n* git checkout\n  * git checkout [branch_name]：切换分支\n  * git checkout -b [branch_name]：新建分支，并切换到该分支\n  * git checkout -：切换到上一次所在分支\n* git cherry-pick\n  * git cherry-pick [commit_id]：将其他分支的commit提交到当前分支\n* git merge\n  * git merge [branch_name]：合并指定分支到当前分支\n\n\n### 远程同步\n\n* git pull\n  * git pull [remote] [branch_name]：拉取远程仓库的指定分支的代码与当前分支合并\n* git push\n  * git push origin [branch_name]：提交当前分支与远程指定分支合并\n  * git push origin :[branch_name]：删除远程分支\n\n> 远程仓库（即`remote`）名一般就是 `origin`\n>\n> 文件(图片除外)操作请尽量使用linux命令\n\n### merge_requests\n\n* 当项目参与者比较多，或者有安全性或者别的不想让参与者直接提交代码的时候，可以采用 `merge_requests` 模式。\n* 可以进行 `code review`\n* 这是一种比较推荐的git使用方式，具体使用方式请自行百度，然后找个人一起练习一下就能轻松掌握~\n\n## 参考资料\n\n* [Git 维基百科](https://zh.wikipedia.org/wiki/Git)\n* [Git 百度百科](http://baike.baidu.com/item/GIT/12647237)\n* [Git Pro](https://git-scm.com/book/zh/v2)\n* [Git 常用命令清单 阮一峰](http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html)",
    "tool/ProjectGuide": "# 主目录\n\n* ershoufang\n* xiaoqu\n* chengjiao\n* housingPrice -> fangjia\n* zufang\n* jingjiren\n* baike\n* redian\n* wenda\n* tool\n* ditu\n* yezhu\n* lvju\n* haiwai\n* about\n* client -> app\n* compare\n* user\n* research\n* sitemap\n* topic\n\n\n# 子目录\n\n* component     组件\n* img           图片\n* spriteImg     雪碧图\n* css           less\n* font          字体\n* templates     ejs\n* data          json\n* mock          json\n* util          工具\n* config        配置\n\n\n# 文件名\n\n* common\n* index\n* list\n* detail\n* search\n* base\n\n\n# 组件\n\n* js + less在一块, 有doc.md\n\n\n# package.js\n\n1. lianjia-fe下只留一个新版的package.json\n2. 更新package.json需向志强申请, 并通知组内人员[低频事件]\n3. package.json同级目录下建一个package.md, 对应每个包的简洁[方便学习, 防止滥用]\n\n\n# 建议\n\n1. 目录尽量不要和文件同级\n2. 命名不要使用 new、newVersion, 使用V2 V3 ...\n3. 目录名、文件名统一用驼峰\n4. 尽量使用拼音而非英文或中西结合[拼音较长除外]\n5. README.md 项目说明文档\n6. 不要留下无用文件或目录\n7. 命名中不要出现lianjia、homelink..",
    "tool/CodeGuide": "# HTML\n\n## 语法\n\n* 使用4个空格代替缩进\n* 嵌套的节点应该缩进\n* 属性值用双引号\n* 标签名全部小写\n* 属性名全小写，分隔符为-\n* 自定义属性全部 data-*\n* boolean属性指不要声明属性值\n\n## 基本结构\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <title>Document</title>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n</head>\n<body>\n```\n\n## 标签嵌套规范\n\n* 内联元素不能嵌套块元素\n* p, dt, h1 不能嵌套块元素\n* 块元素与块元素平级、内联元素与内联元素平级\n\n## 属性顺序(荐)\n\n* id、class、name、data-*\n* src、for、type、href、value、max-length、pattern\n* placeholder、title、alt\n* required、readonly、disabled\n\n## 推荐\n\n* 自闭合标签结尾不加/\n\n# CSS\n\n## 语法\n\n* 使用4个空格代替缩进\n* 每个属性声明独占一行\n* 选择器嵌套不要超过3层\n* 注释独占一行\n* 分组选择器需换行\n* 嵌套需换行\n* 每个属性声明末尾都要加分号\n* 全部双引号\n* 复合属性尽量简写\n\n> 常用复合属性: margin padding font background transition animation\n\n\n## 空格\n\n* 属性值前\n* 选择器'>', '+', '~'前后\n* '{'前\n* !important '!'前\n* 属性值中的','后\n* 注释分隔符前后\n\n## 命名\n\n* 类名使用小写字母，以中划线分隔（参考Bootstrap）\n* id采用驼峰式命名\n\n## 顺序(荐)\n\n* 可见性(display, visibilty, overflow)\n* 浮动(float, clear)\n* 定位(position, z-index, t-r-b-l)\n* 盒模型(width, min-width, max-width, margin, padding, border, content)\n* 字体(font, line-height)\n* 颜色、背景色(color, background)\n* 其他(transition, transform, outline, box-shadow)\n\n## 推荐\n\n* 不建议使用类选择器\n* 样式里面不要出现id\n* 尽量不用 important\n* 尽量少用'*'选择器\n* zIndex规范: 100, 101, ...\n* 不要有空的规则\n* 元素选择器小写\n* 去掉小数点前面的0\n* 属性值'0'后面不要加单位\n* 标准属性写在厂商前缀属性后面\n* 用 border: 0; 代替 border: none;\n\n\n# JS\n\n## 语法\n\n* 使用4个空格代替缩进\n* 一行一条语句\n* 语句末尾加分号\n* 函数参数之间的逗号后加空格\n* 用'===', '!=='代替'==', '!='\n* 同步模块的require import 都放在最前面\n* 尽量改变className 而不是操作style\n* 将要用于js操作的元素加className act驼峰(eg: actSubmit)\n* 注释独占一行\n* 注释采用DocBlockr风格\n\n> Reference\n[usejsdoc](http://usejsdoc.org/)\n[JSDoc Guide](http://yuri4ever.github.io/jsdoc/)\n\n```\n// 单行注释\n\n/**\n * 多行注释\n * 多行注释\n */\n```\n\n## 换行 空格\n\n* 运算符与操作值之间加空格\n\n```\n// []\nvar a = [1, 2, 3];\n// {}\nvar a = {\n  a: 1,\n  b: 2\n};\n// ()\nvar a = (1 + 2) * 3;\n// function\nfunction a() {\n\n}\n// 二元运算符\nx++;\n++x;\n// 三目运算符\nvar x = a > b ? c : d;\n// if else while catch finally switch case try catch\nif(a > b) {\n\n}else if(c > d) {\n\n}else {\n\n}\n// for while\nfor(var i = 0; i < 1; i++) {\n\n}\n```\n\n## 引号\n\n> 最外层使用单引号, 内层使用双引号\n\n## 变量命名\n\n* 标准变量采用驼峰式命名\n* 常量全大写, 用下划线连接\n* 构造函数, 首字母大写\n* jquery对象以'$'开头命名\n\n## 变量声明\n\n* 一个函数作用域中所有的变量声明尽量提到函数首部\n* 一个var, 一个变量\n\n## 数组、对象\n\n* 对象的属性名不要加引号\n* 对象多个属性需换行\n* 对象不要尾逗号\n* 数组不要写空位\n\n## 推荐\n\n* 每个js文件头部都应该有个注释(README)\n* 每个js模块应该分配一个id(命名空间)\n* 编辑器开启word wrap\n* css状态名统一化: active, current, disabled, selected, checked (反义加un)\n* 不要用关键字作为对象的属性名\n* 不要给内置对象的原型添加属性或方法\n* 使用 window.xxx 显式定义全局变量\n* 变量声明和函数声明手动提升\n* for-in里一定要有hasOwnProperty的判断\n* 不要重复声明变量\n* 不要使用with\n* 不要使用eval\n* 行尾不要有空白字符(编辑器设置)\n",
    "tool/Terminal": "# 快捷键\n\n* ctrl+a 行首\n* ctrl+e 行尾\n\n* ctrl+c 终止\n* ctrl+l 清屏\n\n* ctrl+b 向前移一位\n* ctrl+f 向后移一位\n\n* ctrl+d 向后删除一位\n* ctrl+h 向前删除一位\n*\n* ctrl+k 删除至行尾\n* ctrl+u 删除至行首\n\n* ctrl+w 删除至词首\n\n* ctrl+p 上一条命令\n* ctrl+n 下一条命令",
    "tool/SQL": "# DDL\n\n* CREATE DATABASE - 创建新数据库\n* ALTER DATABASE - 修改数据库\n* CREATE TABLE - 创建新表\n* ALTER TABLE - 变更（改变）数据库表\n* DROP TABLE - 删除表\n* CREATE INDEX - 创建索引（搜索键）\n* DROP INDEX - 删除索引\n\n# DML\n\n* SELECT - 从数据库表中获取数据\n* UPDATE - 更新数据库表中的数据\n* DELETE - 从数据库表中删除数据\n* INSERT INTO - 向数据库表中插入数据\n\n***\n\n\n# SELECT\n\n* SELECT 列名 FROM 表名\n* SELECT 列1,列2 FROM 表名\n* SELECT * FROM 表名\n\n# WHERE\n\n* SELECT 列名 FROM 表名 WHERE 列 运算符 值\n\n\n# 运算符\n\n> =、<>、>、<、>=、<=、BETWEEN、LIKE、AND、OR\n\n# ORDER BY\n\n> ORDER BY 列名 [ASC、DESC]\n\n# INSERT INTO\n\n* INSERT INTO 表名 VALUES (值1, 值2,....)\n* INSERT INTO 表名 (列1, 列2,...) VALUES (值1, 值2,....)\n\n\n# UPDATE\n\n* UPDATE 表名 SET 列名=新值\n* UPDATE 表名 SET 列名=新值 WHERE 列名=值\n* UPDATE 表名 SET 列名1=值1,列名=值2 WHERE 列名=值\n\n# DELETE\n\n* DELETE FROM 表名 WHERE 列名=值\n* DELETE FROM 表名\n* DELETE * FROM 表名\n\n\n\n\n",
    "tool/Mongodb": "# Introduce\n\n* [官网](https://www.mongodb.com/)\n* [下载](https://www.mongodb.com/download-center)\n* [GUI - robomongo](https://robomongo.org/)\n\n# Install\n\n* brew update\n* brew install mongodb\n* export PATH=`<mongodb-install-directory>`/bin:$PATH\n> export PATH=/usr/local/mongodb/bin:$PATH\n* mkdir -p /data/db\n* mongod --dbpath `<path to data directory>`\n* [Referrence](https://docs.mongodb.com/getting-started/shell/tutorial/install-mongodb-on-os-x/)\n\n# Concept\n\n| SQL | MongoDB | explain |\n|---|---|---|\n| database | database | 数据库 |\n| table | collection | 数据库表/集合 |\n| row | document | 数据记录行/文档 |\n| column | field | 数据字段/域 |\n| index | index | 索引 |\n| table joins | | 表连接,MongoDB不支持 |\n| primary key | primary key | 主键,MongoDB自动将_id字段设置为主键 |\n\n| RDBMS | MongoDB |\n|-|-|\n| 数据库 | 数据库 |\n| 表格 | 集合 |\n| 行 | 文档 |\n| 列 | 字段 |\n| 表联合 | 嵌入文档 |\n| 主键 |  主键 (MongoDB 提供了 key 为 _id ) |\n\n# Shell\n\n```\nif 设置了环境变量\n  mongo\nelse\n  cd `<mongodb-install-directory>`/bin\n  ./mongo\n```\n\n```\n# 显示当前数据库名\ndb\n\n# 显示所有数据库列表\nshow dbs\n\n# 创建/切换数据库\nuse db_name\n\n# 文档\ndb.collection_name\ndb.collection_name.find()\ndb.collection_name.findOne()\ndb.collection_name.insert(document)\ndb.collection_name.save(<document>, {writeConcern: <document>})\ndb.collection_name.update(<query>, <update>, {upsert: <boolean>, multi: <boolean>, writeConcern: <document>})\ndb.collection_name.remove(<query>, <justOne>)\n\n# 删除当前数据库\ndb.dropDatabase()\n\n# 删除集合\ndb.collection_name.drop()\n```\n\n#  MongoDB Package Components\n\n## mongod\n\n```\n--help, -h\n--version\n--verbose, -v\n--config <filename>, -f <filename>\n--quiet\n--port <port> Default: 27017\n--bind_ip <ip address>\n--logpath <path>\n--logappend\n--logRotate <string> Default: rename\n--timeStampFormat <string> Default: iso8601-local   ctime | iso8601-utc | iso8601-local\n--syslog\n--syslogFacility <string> Default: user\n--traceExceptions\n--pidfilepath <path>\n--keyFile <file>\n--setParameter <options>\n--nounixsocket\n--unixSocketPrefix <path> Default: /tmp\n--filePermissions <path> Default: 0700\n--fork\n--auth\n--noauth\n--transitionToAuth\n--jsonp\n--profile <level> Default: 0 0 | 1 | 2\n--cpu\n```\n\n## mongoimport\n\n> mongoexport --db `db_name` --collection `collection_name` --out `data.json`\n\n## mongoexport\n\n### json\n\n> mongoexport --db `db_name` --collection `collection_name` --out `data.json`\n\n### csv\n\n> mongoexport --db `db_name` --collection `collection_name` --type=csv --fields `field1,field2` --out `data.csv`",
    "tool/Emmet": "# HTML\r\n\r\n* \\! 文档\r\n* \\# id\r\n* \\. class\r\n* \\[\\] 属性\r\n* \\{\\} 文本\r\n* \\> 子元素\r\n* \\+ 兄弟元素\r\n* ^ 后退(类似jq的end)\r\n* \\(\\) 分组\r\n* $ 自增\r\n* @ 起点(跟在$之后,后跟'-'表示降序)\r\n* \\* 批量\r\n\r\n### 隐式标签 (Implicit TagNames)\r\n\r\n* 块元素 → div\r\n* 行间元素 → span\r\n* ul, ol → li\r\n* select, optgroup → option\r\n* table, thead ,tbody, tfoot → tr\r\n* tr → td\r\n\r\n# CSS\r\n\r\n* 单值/负值/多值/多命令\r\n\r\n```\r\nm100 → margin: 100px;\r\nm-100 → margin: -100px;\r\nm0-a → margin: 0 auto;\r\nm1-2-3 → margin: 1px 2px 3px;\r\nm1-2-3-4 → margin: 1px 2px 3px 4px;\r\nw100+c#3 → width: 100px; color: #333;\r\n```\r\n\r\n* 缺省单位\r\n\r\n```\r\nm10 → margin: 10px;\r\nm10em → margin: 10em;\r\n```\r\n\r\n* 单位别名\r\n\r\n```\r\np → %\r\ne → em\r\nx → ex\r\n```\r\n\r\n```\r\nw100p → width: 100%\r\nm10p30e5x → margin: 10% 30em 5ex\r\n```\r\n\r\n* 色值\r\n\r\n```\r\nc → color: #000;\r\nc# → color: #000;\r\nc#1 → color: #111;\r\nc#12 → color: #121212;\r\nc#123 → color: #123;\r\nc#1234 → color: #123412;\r\nc#12345 → color: #123451;\r\nc#123456 → color: #123456;\r\n```\r\n\r\n* 没有单位的属性\r\n\r\n```\r\n* z-index\r\n* line-height\r\n* opacity\r\n* font-weight\r\n```\r\n\r\n* !important\r\n\r\n```\r\n! → !important\r\n```\r\n\r\n* 厂商前缀\r\n\r\n```\r\nw: webkit\r\nm: moz\r\ns: ms\r\no: o\r\n```\r\n\r\n```\r\n-wm-bx-s\r\n-webkit-box-shadow: inset hoff voff blur color;\r\n-moz-box-shadow: inset hoff voff blur color;\r\nbox-shadow: inset hoff voff blur color;\r\n```\r\n\r\n* 渐变\r\n\r\n```\r\nlg()\r\nbackground-image: -webkit-linear-gradient();\r\nbackground-image: -o-linear-gradient();\r\nbackground-image: linear-gradient();\r\n\r\nlg(left, #123 30%, #456)\r\nbackground-image: -webkit-linear-gradient(left, #123 30%, #456);\r\nbackground-image: -o-linear-gradient(left, #123 30%, #456);\r\nbackground-image: linear-gradient(to right, #123 30%, #456);\r\n```\r\n\r\n\r\n# Referrence\r\n\r\n1. [http://emmet.io/](http://emmet.io/)\r\n2. [http://docs.emmet.io/](http://docs.emmet.io/)\r\n3. [https://github.com/emmetio/emmet/blob/master/lib/snippets.json](https://github.com/emmetio/emmet/blob/master/lib/snippets.json)",
    "tool/English": "| 英语 | 释义 |\n|---|---|\n| identifier | 标识符 |\n| declaring | 声明 |\n| parse | 解析 |\n| available | 有效的 |\n| expression | 表达式 |\n| parameter | 参数 |\n| scope | 范围 |\n| invoke | 调用 |\n| reference | 参考 |\n| refer | 参考 |\n| syntax | 语法 |\n| description | 描述 |\n| correspond | 对应 |\n| suffix | 后缀 |\n| standard | 标准 |\n| force | 强制 |\n| modify | 修改 |\n| anonymous | 匿名的 |\n| specification | 规范 |\n| statement | 声明 |\n| correspond | 对应 |\n| deprecate | 过时 |\n| execute | 执行 |\n| generator | 生成器 |\n| shortcut | 快捷方式 |\n| browser | 浏览器 |\n| compatibility | 兼容性 |\n| feature | 功能, 特征 |\n| literal | 字面量 |\n| class | 类 |\n| object | 对象 |\n| prototype | 原型 |\n| instance | 实例 |\n| method | 方法 |\n| propertie | 属性 |\n| oriented | 面向的 |\n| constructor | 构造函数 |\n| inherit | 继承 |\n| recurse | 递归 |\n| specify | 指定 |\n| generally | 一般 |\n| release | 发布 |\n| candidate | 候选人 |\n| tutorial | 教程 |\n| redirect | 重定向 |\n| profile | 简介 |\n| explore | 探索 |\n| involve | 涉及 |\n| typical | 典型的 |\n| plugin | 插件 |\n| via | 通过 |\n| require | 需要 |\n| stable | 稳定的 |\n| ensure | 确保 |\n| certain | 某些 |\n| reference | 参考 |\n| Synopsis | 简介 |\n| checkout | 校验 |\n| config | 配置 |\n| command | 命令 |\n| directory | 目录 |\n| multiple | 多个 |\n| simultaneously | 同时 |\n| locally | 本地的 |\n| execute | 执行 |\n| request | 请求 |\n| assume | 假设 |\n| recursive | 递归 |\n| sophisticated | 复杂的 |\n| manually | 手动 |\n| polling | 轮询 |\n| deploy | 部署 |\n| proxy | 代理 |\n| interface | 接口，关键字 |\n| interactive | 交互式的 |\n| caution | 警告 |\n| integration | 集成 |\n| grant | 允许 |\n| define stack | 定义栈 |\n| call stack | 调用栈 |\n| bundler | 打包 |\n| boilerplate | 模板 |\n| intent | 目的 |\n| nullified | 无效的 |\n| term | 术语 |\n| terminology | 术语 |\n| dispatch | 分发 |\n| avatar | 头像 |\n| deactivate | 停用 |\n| mount | 安装 |\n| omit | 忽略 |\n",
    "tool/Gem": "# 卸载之前下载安装的Ruby\r\n\r\n> gem sources --remove https://rubygems.org/\r\n\r\n# 安装淘宝提供的Ruby\r\n\r\n> gem sources -a https://ruby.taobao.org/\r\n\r\n# 查看已经安装的Ruby列表\r\n\r\n> gem sources -l\r\n\r\n\r\n# 安装插件\r\n\r\n> gem install jekyll\r\n",
    "tool/Gitbook": "# 安装\r\n\r\n> npm install gitbook-cli -g\r\n\r\n# 初始化\r\n\r\n> gitbook init\r\n\r\n# 服务\r\n\r\n> gitbook serve\r\n\r\n# 构建\r\n\r\n> gitbook build\r\n\r\n\r\n# book.json 书的信息\r\n\r\n```json\r\n{\r\n  \"gitbook\": \"2.x.x\",\r\n  \"title\": \"ES6入门指南\",\r\n  \"description\": \"This is such a great book!\",\r\n  \"isbn\": \"978-3-16-148410-0\",\r\n  \"language\": \"en, ar, bn, ca, cs, de, en, es, fa, fi, fr, he, it, ja, ko, no, pl, pt, ro, ru, sv, tr, uk, vi, zh-hans, zh-tw\",\r\n  \"direction\": \"ltr\",\r\n  \"structure\": {\r\n    \"readme\": \"README.md\"\r\n  },\r\n  \"variables\": {\r\n    \"myTest\": \"Hello World\"\r\n  },\r\n  \"styles\": {\r\n    \"website\": \"styles/website.css\",\r\n    \"ebook\": \"styles/ebook.css\",\r\n    \"pdf\": \"styles/pdf.css\",\r\n    \"mobi\": \"sty  les/mobi.css\",\r\n    \"epub\": \"styles/epub.css\"\r\n  },\r\n  \"plugins\": [\"myplugin\"],\r\n  \"pluginsConfig\": {\r\n    \"myPlugin\": {\r\n      \"message\": \"Hello World\"\r\n    }\r\n  },\r\n  \"pdf\": {\r\n    \"headerTemplate\": \"Header of the PDF with _TITLE_\",\r\n    \"footerTemplate\": \"Footer HTML template. Available variables: _PAGENUM_, _TITLE_, _AUTHOR_ and _SECTION_.\"\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n# SUMMARY.md 目录\r\n\r\n```\r\nSummary\r\n\r\n[Chapter 1](chapter1.md)\r\n[Chapter 2](chapter2.md)\r\n[Chapter 3](chapter3.md)\r\n```\r\n\r\n# Cover 封面\r\n\r\n```\r\nbig     cover.jpg           1800x2360\r\nsmall   cover_small.jpg     200x262\r\n```\r\n\r\n# GLOSSARY.md 词汇表\r\n\r\n```\r\nterm\r\nDefinition for this term\r\n\r\nAnother term\r\nWith it's definition, this can contain bold text and all other kinds of inline markup ...\r\n```\r\n\r\n# Templating 模板\r\n\r\n```\r\n// 模板语言 Nunjucks + Jinja2\r\n{% raw %}\r\n  this will {{ not be processed }}\r\n{% endraw %}\r\n\r\n// 定义变量 book.json\r\n{\r\n  \"variables\": {\r\n    \"myVariable\": \"Hello World\"\r\n  }\r\n}\r\n// 调用变量\r\n{{ book.myVariable }}\r\n{{ book.foo.bar }}\r\n{{ book[\"bar\"] }}\r\n// Context variables 上下文变量\r\nfile.path\r\nfile.mtime\r\n// Tags 标签\r\nif\r\nfor\r\ninclude\r\n```\r\n\r\n# ignoring 忽略的文件和文件夹\r\n\r\n```\r\n.gitignore, .bookignore .ignore\r\n```\r\n\r\n# github\r\n\r\n```\r\n// webhook\r\nhttps://www.gitbook.com/book/shuoshubao/es6/settings/github\r\nUsername/Repo\r\n```",
    "tool/Jekyll": "# 安装\r\n\r\n* gem install jekyll\r\n\r\n# 初始化\r\n\r\n* jekyll new siteName\r\n\r\n# 开启服务\r\n\r\n* cd siteName\r\n* jekyll serve\r\n\r\n> http://localhost:4000\r\n\r\n# 用法\r\n\r\n## jekyll build\r\n\r\n* jekyll build\r\n\r\n> 当前文件夹中的内容将会生成到 ./site 文件夹中\r\n\r\n* jekyll build --destination <destination>\r\n\r\n> 当前文件夹中的内容将会生成到目标文件夹<destination>中\r\n\r\n* jekyll build --source <source> --destination <destination>\r\n\r\n> 指定源文件夹<source>中的内容将会生成到目标文件夹<destination>中\r\n\r\n* jekyll build --watch\r\n\r\n> 当前文件夹中的内容将会生成到 ./site 文件夹中\r\n\r\n## jekyll serve\r\n\r\n* jekyll serve\r\n* jekyll serve --detach\r\n* jekyll serve --watch\r\n\r\n# Github\r\n\r\n1. git clone https://github.com/shuoshubao/blog.git\r\n2. 将git里面的 `.git` 文件夹和 `README.md` 文件拷贝到jekyll目录下\r\n3. 提交到github\r\n\r\n",
    "tool/Mac": "# 1. 终端自动补全忽略大小写\r\n\r\n### 输入\r\n\r\n* $ nano .inputrc\r\n\r\n### 粘贴\r\n\r\n* set completion-ignore-case on\r\n* set show-all-if-ambiguous on\r\n* TAB: menu-complete\r\n\r\n### 保存\r\n\r\n* Control+O，回车保存\r\n\r\n### 重启\r\n\r\n* 重启终端生效\r\n\r\n\r\n# 2. 关闭/开启 Spotlight\r\n\r\n### 关闭\r\n\r\n> sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist\r\n\r\n### 开启\r\n\r\n> sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist\r\n\r\n\r\n# 3. 快捷键\r\n\r\n* cmd+,                 打开当前app的设置\r\n* cmd+w                 关闭当前标签页\r\n* cmd+q                 退出当前程序\r\n* cmd+h                 隐藏除了当前窗口\r\n* cmd+alt+h             隐藏除了当前窗口以外的所有窗口\r\n* cmd+shift+delete      清空垃圾桶\r\n* cmd+alt+shift+delete  清空垃圾桶（无提示）\r\n* cmd+左右               行首/末\r\n* cmd+上下               顶/底部\r\n* fn+上下                    翻页\r\n\r\n\r\n# 4. 关闭/开启 自动生成 .DS_Store 文件\r\n\r\n### 关闭\r\n\r\n> defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE\r\n\r\n### 开启\r\n\r\n> defaults delete com.apple.desktopservices DSDontWriteNetworkStores\r\n\r\n# 5. 显示/隐藏 隐藏文件(夹)\r\n\r\n### 显示\r\n\r\n> defaults write com.apple.Finder AppleShowAllFiles YES\r\n\r\n### 隐藏\r\n\r\n> defaults write com.apple.Finder AppleShowAllFiles NO\r\n\r\n# 6. 删除所有的 .DS_Store 文件\r\n\r\n> sudo find / -name \".DS_Store\" -depth -exec rm {} \\;\r\n\r\n# 7. Alias\r\n\r\n> vim ~/.bash_profile\r\n\r\n```\r\nalias dev = ssh root@172.34.56\r\nalias gst = git status\r\nalias gpl = git pull\r\nalias gps = git push\r\n```",
    "tool/Markdown": "#链接/图片\n\n* 链接 ： [文字](http://shuoshubao.github.io)\n* 图片 ： ![文字](https://assets-cdn.github.com/favicon.ico)\n\n# 标题\n\n#  一级标题\n\n## 二级标题\n\n\n# 引用\n\n> 只需要在文本前加入 \\> 即可\n\n# 斜体/粗体/分隔线\n\n* \\*斜体*\n* \\*\\* 粗体 **\n* \\*\\*\\*\n\n# 代码框\n\n* \\`\\`\\`\n* \\`\\`\\`language-name(eg:css, html, js ...)\n\n# 列表\n\n- 无序列表1\n- 无序列表2\n\n***\n\n* 无序列表1\n* 无序列表2\n\n***\n\n1. 有序列表1\n2. 有序列表2\n\n***\n\n# 表格\n\n```\n|Tables|Are|Cool|\n|-|:-:|-:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n```\n\n\n|Tables|Are|Cool|\n|-|:-:|-:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\n# 反斜杠\n\n```\n\\   反斜线\n`   反引号\n*   星号\n_   底线\n{}  花括号\n[]  方括号\n()  括弧\n#   井字号\n+   加号\n-   减号\n.   英文句点\n!   惊叹号\n```\n",
    "tool/Smarty": "# 注释\n\n```php\n{*comment*}\n```\n\n# 变量\n\n```php\n{$name='shuoshubao'}\n{assign var=\"name\" value=\"shuoshubao\"}\n```\n\n# 遍历\n\n```php\n{foreach $arr as $val}\n{foreach $arr as $key => $val}\n{foreach from=$arr item=v}\n{foreach from=$arr item=v key=k}\n```\n\n# 重复\n\n```php\n{for $i=1 to 5}\n```\n",
    "tool/Software": "# Mac\r\n\r\nMicrosoft_Office_2016_MAC（文件大小：1.08G）\r\n\r\n> 百度网盘: [http://pan.baidu.com/s/1eRwE3dw](http://pan.baidu.com/s/1eRwE3dw)\r\n\r\n\r\nPS_CC_2016_MAC（文件大小：829.2M）\r\n\r\n> 百度网盘: [http://pan.baidu.com/s/1hrgvqHQ](http://pan.baidu.com/s/1hrgvqHQ)\r\n\r\n\r\nMyEclipse_2015_CI_18_Mac（文件大小：1.33G）\r\n\r\n> 百度网盘: [http://pan.baidu.com/s/1o7moGxO](http://pan.baidu.com/s/1o7moGxO)\r\n\r\n# Win\r\n\r\nVisio_2013\r\n\r\n> 百度网盘：[http://pan.baidu.com/s/1mhgnrao](http://pan.baidu.com/s/1mhgnrao)",
    "tool/Sublime": "# 最佳配置\r\n\r\n```json\r\n{\r\n  \"caret_style\": \"smooth\",\r\n  \"detect_indentation\": false,\r\n  \"draw_white_space\": \"all\",\r\n  \"file_exclude_patterns\": [\"*.pyc\", \"*.pyo\", \"*.exe\", \"*.dll\", \"*.obj\", \"*.o\", \"*.a\", \"*.lib\", \"*.so\", \"*.dylib\", \"*.ncb\", \"*.sdf\", \"*.suo\", \"*.pdb\", \"*.idb\", \".DS_Store\", \"*.class\", \"*.psd\", \"*.db\", \"*.sublime-workspace\", \"._*\"],\r\n  \"find_selected_text\": true,\r\n  \"folder_exclude_patterns\": [\".svn\", \".git\", \".hg\", \"CVS\", \"node_modules\"],\r\n  \"font_size\": 18,\r\n  \"highlight_line\": true,\r\n  \"ignored_packages\": [\"Vintage\"],\r\n  \"indent_to_bracket\": true,\r\n  \"match_brackets_angle\": false,\r\n  \"match_brackets_braces\": false,\r\n  \"tab_size\": 4,\r\n  \"translate_tabs_to_spaces\": true,\r\n  \"trim_trailing_white_space_on_save\": true,\r\n  \"ensure_newline_at_eof_on_save\": true,\r\n  \"word_wrap\": false\r\n}\r\n```\r\n\r\n# [Package Control](https://packagecontrol.io/installation)\r\n\r\n### sublime text 2\r\n\r\n```\r\nimport urllib2,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')\r\n```\r\n\r\n### sublime text 3\r\n\r\n```\r\nimport urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)\r\n```\r\n\r\n# 注册码\r\n\r\n### sublime text 3 [new!!!]\r\n\r\n```\r\n—– BEGIN LICENSE —–\r\nTwitterInc\r\n200 User License\r\nEA7E-890007\r\n1D77F72E 390CDD93 4DCBA022 FAF60790\r\n61AA12C0 A37081C5 D0316412 4584D136\r\n94D7F7D4 95BC8C1C 527DA828 560BB037\r\nD1EDDD8C AE7B379F 50C9D69D B35179EF\r\n2FE898C4 8E4277A8 555CE714 E1FB0E43\r\nD5D52613 C3D12E98 BC49967F 7652EED2\r\n9D2D2E61 67610860 6D338B72 5CF95C69\r\nE36B85CC 84991F19 7575D828 470A92AB\r\n—— END LICENSE ——\r\n```\r\n\r\n### sublime text 3\r\n\r\n```\r\n—– BEGIN LICENSE —–\r\nMichael Barnes\r\nSingle User License\r\nEA7E-821385\r\n8A353C41 872A0D5C DF9B2950 AFF6F667\r\nC458EA6D 8EA3C286 98D1D650 131A97AB\r\nAA919AEC EF20E143 B361B1E7 4C8B7F04\r\nB085E65E 2F5F5360 8489D422 FB8FC1AA\r\n93F6323C FD7F7544 3F39C318 D95E6480\r\nFCCC7561 8A4A1741 68FA4223 ADCEDE07\r\n200C25BE DBBC4855 C4CFB774 C5EC138C\r\n0FEC1CEF D9DCECEC D3A5DAD1 01316C36\r\n—— END LICENSE ——\r\n```\r\n\r\n# 插件\r\n\r\n* [Emmet](http://shuoshubao.github.io/tool/emmet.html)\r\n* A File Icon\r\n* CSS3\r\n* jQuery\r\n* LESS\r\n* SCSS\r\n* CSScomb\r\n* JsPrettier\r\n* JsFormat\r\n* Quote HTML\r\n* HTML-CSS-JS Prettify\r\n* All Autocomplete\r\n* AutoFileName\r\n* DocBlockr\r\n* DeleteBlankLines\r\n* Console API Snippets\r\n* SFTP\r\n* Nodejs\r\n\r\n# 快捷键\r\n\r\n## 文件\r\n\r\n* cmd+o                     打开文件\r\n* cmd+n                     新建标签页\r\n* cmd+shift+n               新建窗口\r\n* cmd+w                     关闭标签页\r\n* cmd+shift+w               关闭窗口\r\n* cmd+shift+p               打开命令面板\r\n* cmd+p                     搜索项目中的文件\r\n* ctrl+g                    跳到指定行\r\n* ctrl+\\`                    打开控制台\r\n* cmd+k,b                   显示/隐藏文件目录\r\n\r\n## 编辑\r\n\r\n* cmd+c                     复制（选中部分/当前行）\r\n* cmd+x                     剪切（选中部分/当前行）\r\n* cmd+v                     粘贴\r\n* cmd+shift+v               粘贴+缩进\r\n* cmd+alt+v                 打开粘贴板\r\n* cmd+z                     撤销\r\n* cmd+y                     重复上次操作\r\n\r\n## 选择\r\n\r\n* cmd+a                     全选\r\n* cmd+d                     选择单词\r\n* cmd+l                     选择一行\r\n* shift+alt+up              添加上一行\r\n* shift+alt+down            添加下一行\r\n* esc                       只留第一个选择\r\n* cmd+shift+空格             扩展到scope\r\n* cmd+shift+a               光标所在标签的全部内容\r\n* cmd+shift+j               光标所在标签的父标签的全部内容（最近的{}）\r\n* ctrl+shift+m              选中光标所在括号（小括号，中括号，大括号）里面的全部内容\r\n\r\n### 行\r\n\r\n* cmd+ctrl+up               上移一行\r\n* cmd+ctrl+down             下移一行\r\n* cmd+shift+d               复制并粘贴行\r\n* ctrl+shift+k              删除行\r\n* cmd+j                     合并行\r\n\r\n### 注释 / 缩进 / 大小写\r\n\r\n* cmd+/\r\n* cmd+shift+/\r\n* cmd+[\r\n* cmd+]\r\n* cmd+k,u                   大写\r\n* cmd+k,l                   小写\r\n\r\n### 文本\r\n\r\n* cmd+enter                 往下插入行\r\n* cmd+shift+enter           往上插入行\r\n* cmd+delete                删除光标至行首\r\n* ctrl+k                    删除光标至行尾\r\n* ctrl+t                    交换光标左右字符\r\n\r\n### 标签\r\n\r\n* cmd+alt+.                 补全标签\r\n* alt+shift+w               为选中域包裹一对闭合标签\r\n* ctrl+alt+enter            为选中域包裹一对闭合标签（比楼上的命令更高级）\r\n* ctrl+e                    将选中的单词补全为一对闭合标签\r\n\r\n### 折叠\r\n\r\n* cmd+alt+[                 折叠\r\n* cmd+alt+]                 展开\r\n* cmd+k,j                   展开所有\r\n* cmd+k,t                   折叠标签属性\r\n* cmd+k,数字                 折叠n层\r\n\r\n### 排序（卵用）\r\n\r\n* f9                        行按升序排\r\n* ctrl+f9                   行按升序排，区分大小写\r\n\r\n# 命令行[打开文件或者目录]\r\n\r\n## subs\r\n\r\n```\r\nSublime Text 提供命令行的工具: subs\r\n路径: /Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl\r\n```\r\n\r\n## ln\r\n\r\n```\r\nln  /Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl\r\n或者\r\nln  /Applications/Sublime\\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/st\r\n```\r\n## file or folder\r\n\r\n```\r\nst index.js\r\n或者\r\nst img\r\n```\r\n",
    "assemble/Nav": "<dl>\n  <dt>JS框架</dt>\n  <dd>\n    <a href=\"http://jquery.com/\">jquery</a>\n    <a href=\"http://zeptojs.com/\">zeptojs</a>\n    <a href=\"http://seajs.org/\">seajs</a>\n    <a href=\"http://requirejs.org/\">requirejs</a>\n    <a href=\"http://knockoutjs.com/\">knockoutjs</a>\n    <a href=\"http://emberjs.com/\">emberjs</a>\n    <a href=\"http://backbonejs.org/\">backbonejs</a>\n    <a href=\"http://vuejs.org.cn/\">vuejs</a>\n    <a href=\"https://angularjs.org/\">angularjs</a>\n    <a href=\"http://avalonjs.github.io/\">avalonjs</a>\n    <a href=\"https://facebook.github.io/react/\">react</a>\n  </dd>\n</dl>\n<dl>\n  <dt>JS工具库</dt>\n  <dd>\n    <a href=\"http://underscorejs.org/\">underscore.js</a>\n    <a href=\"https://lodash.com/\">lodash.js</a>\n    <a href=\"http://danieltao.com/lazy.js/\">lazy.js</a>\n  </dd>\n</dl>\n<dl>\n  <dt>自动化测试</dt>\n  <dd>\n    <a href=\"http://mochajs.org/\">mocha</a>\n    <a href=\"http://chaijs.com/\">chai</a>\n    <a href=\"http://jasmine.github.io/\">jasmine</a>\n    <a href=\"https://qunitjs.com/\">qunit</a>\n  </dd>\n</dl>\n<dl>\n  <dt>NodeJs</dt>\n  <dd>\n    <a href=\"http://expressjs.com/\">Express</a>\n    <a href=\"http://koajs.com/\">Koa</a>\n    <a href=\"https://www.meteor.com/\">Meteor</a>\n  </dd>\n</dl>\n<dl>\n  <dt>React</dt>\n  <dd>\n    <a href=\"http://facebook.github.io/react/\">react</a>\n    <a href=\"https://facebook.github.io/react-native/\">react-native</a>\n    <a href=\"http://facebook.github.io/flux/\">flux</a>\n    <a href=\"http://redux.js.org/\">redux</a>\n    <a href=\"http://reactjs.cn/\">react-cn</a>\n    <a href=\"http://react-china.org/\">react-china</a>\n    <a href=\"http://alibaba.github.io/weex/\">weex</a>\n    <a href=\"https://facebook.github.io/immutable-js/\">immutable.js</a>\n    <a href=\"https://github.com/ReactTraining/react-router\">react-router</a>\n    <a href=\"https://github.com/gaearon/redux-thunk\">redux-thunk</a>\n  </dd>\n</dl>\n<dl>\n  <dt>UI框架</dt>\n  <dd>\n    <a href=\"http://v3.bootcss.com/\">bootstrap</a>\n    <a href=\"http://foundation.zurb.com/\">foundation</a>\n    <a href=\"http://semantic-ui.com/\">semantic</a>\n    <a href=\"http://getuikit.com/\">uikit</a>\n    <a href=\"http://material-ui.com/\">material</a>\n    <a href=\"http://materializecss.com/\">materialize</a>\n    <a href=\"http://purecss.io/\">pure</a>\n    <a href=\"http://jqueryui.com/\">jq-ui</a>\n    <a href=\"http://goratchet.com/\">goratchet</a>\n    <a href=\"http://amazeui.org/\">amaze-ui</a>\n    <a href=\"http://weui.github.io/weui/\">we-ui</a>\n    <a href=\"http://frozenui.github.io/\">frozen-ui</a>\n    <a href=\"http://ant.design/\">ant-design</a>\n    <a href=\"http://iconfont.cn/\">iconfont</a>\n    <a href=\"http://daneden.github.io/animate.css/\">animate.css</a>\n  </dd>\n</dl>\n<dl>\n  <dt>构建工具</dt>\n  <dd>\n    <a href=\"http://www.bootcss.com/p/lesscss/\">less</a>\n    <a href=\"http://www.sasschina.com/\">sass</a>\n    <a href=\"http://stylus-lang.com/\">stylus</a>\n    <a href=\"http://postcss.org/\">postcss</a>\n    <a href=\"http://www.gulpjs.com.cn/\">gulp</a>\n    <a href=\"http://www.gruntjs.net/\">grunt</a>\n    <a href=\"http://fis.baidu.com/\">fis</a>\n    <a href=\"http://browserify.org/\">browserify</a>\n    <a href=\"http://webpack.github.io/\">webpack</a>\n    <a href=\"http://babeljs.io/\">babel</a>\n  </dd>\n</dl>\n<dl>\n  <dt>Grunt / Gulp 插件</dt>\n  <dd>\n    <a href=\"https://www.npmjs.com/package/grunt-contrib-copy\">grunt-contrib-copy</a>\n    <a href=\"https://www.npmjs.com/package/grunt-contrib-clean\">grunt-contrib-clean</a>\n    <a href=\"https://www.npmjs.com/package/grunt-contrib-watch\">grunt-contrib-watch</a>\n    <a href=\"https://www.npmjs.com/package/grunt-contrib-concat\">grunt-contrib-concat</a>\n    <a href=\"https://www.npmjs.com/package/grunt-contrib-connect\">grunt-contrib-connect</a>\n    <a href=\"https://www.npmjs.com/package/grunt-contrib-imagemin\">grunt-contrib-imagemin</a>\n    <a href=\"https://www.npmjs.com/package/grunt-htmlhint\">grunt-htmlhint</a>\n    <a href=\"https://www.npmjs.com/package/grunt-markdown\">grunt-markdown</a>\n    <a href=\"https://www.npmjs.com/package/grunt-contrib-csslint\">grunt-contrib-csslint</a>\n    <a href=\"https://www.npmjs.com/package/grunt-autoprefixer\">grunt-autoprefixer</a>\n    <a href=\"https://www.npmjs.com/package/grunt-contrib-less\">grunt-contrib-less</a>\n    <a href=\"https://www.npmjs.com/package/grunt-contrib-sass\">grunt-contrib-sass</a>\n    <a href=\"https://www.npmjs.com/package/grunt-contrib-jshint\">grunt-contrib-jshint</a>\n    <a href=\"https://www.npmjs.com/package/grunt-contrib-uglify\">grunt-contrib-uglify</a>\n  </dd>\n  <dd>\n    <a href=\"https://www.npmjs.com/package/gulp-markdown\">gulp-markdown</a>\n    <a href=\"https://www.npmjs.com/package/gulp-htmlhint\">gulp-htmlhint</a>\n    <a href=\"https://www.npmjs.com/package/gulp-less\">gulp-less</a>\n    <a href=\"https://www.npmjs.com/package/gulp-sass\">gulp-sass</a>\n    <a href=\"https://www.npmjs.com/package/gulp-csslint\">gulp-csslint</a>\n    <a href=\"https://www.npmjs.com/package/gulp-csscomb\">gulp-csscomb</a>\n    <a href=\"https://www.npmjs.com/package/gulp-cssmin\">gulp-cssmin</a>\n    <a href=\"https://www.npmjs.com/package/gulp-autoprefixer\">gulp-autoprefixer</a>\n    <a href=\"https://www.npmjs.com/package/gulp-jshint\">gulp-jshint</a>\n    <a href=\"https://www.npmjs.com/package/gulp-uglify\">gulp-uglify</a>\n    <a href=\"https://www.npmjs.com/package/gulp-babel\">gulp-babel</a>\n    <a href=\"https://www.npmjs.com/package/gulp-webpack\">gulp-webpack</a>\n    <a href=\"https://www.npmjs.com/package/gulp-browserify\">gulp-browserify</a>\n  </dd>\n</dl>\n<dl>\n  <dt>实用工具</dt>\n  <dd>\n    <a href=\"http://tool.lu/html/\">html</a>\n    <a href=\"http://tool.lu/css/\">css</a>\n    <a href=\"http://tool.lu/js/\">js</a>\n    <a href=\"http://jshint.com/\">jshint</a>\n    <a href=\"http://tool.lu/json/\">json</a>\n    <a href=\"https://tinypng.com/\">图片压缩</a>\n    <a href=\"http://tool.lu/base64image/\">图片base64</a>\n    <a href=\"http://tool.lu/imageholder/\">图片占位符</a>\n    <a href=\"http://tool.lu/timestamp/\">时间戳</a>\n    <a href=\"http://prismjs.com/\">PrismJs</a>\n    <a href=\"https://highlightjs.org/\">HighlightJs</a>\n  </dd>\n</dl>\n<dl>\n  <dt>学习网站</dt>\n  <dd>\n    <a href=\"http://javascript.ruanyifeng.com/\">阮一峰</a>\n    <a href=\"https://developer.mozilla.org/zh-CN/docs/Web\">MDN</a>\n    <a href=\"http://www.w3cfuns.com/\">w3cfuns</a>\n    <a href=\"http://www.w3cplus.com/\">w3cplus</a>\n    <a href=\"http://aralejs.org/\">aralejs</a>\n    <a href=\"http://aliceui.org/\">aliceui</a>\n    <a href=\"http://www.tuicool.com/\">推酷</a>\n    <a href=\"http://www.oschina.net/\">开源中国</a>\n    <a href=\"http://segmentfault.com/\">segmentfault</a>\n    <a href=\"http://www.css88.com/\">愚人码头</a>\n    <a href=\"http://www.cnblogs.com/rubylouvre/\">司徒正美</a>\n    <a href=\"http://www.imooc.com/\">慕课网</a>\n  </dd>\n</dl>\n<dl>\n  <dt>Company</dt>\n  <dd>\n    <a href=\"http://www.alloyteam.com/\">腾讯</a>\n    <a href=\"http://taobaofed.org/\">淘宝</a>\n    <a href=\"http://fex.baidu.com/\">百度</a>\n    <a href=\"https://aotu.io/\">京东</a>\n    <a href=\"http://ued.qunar.com/\">去哪儿</a>\n    <a href=\"http://www.75team.com/\">齐舞团</a>\n    <a href=\"http://mofang.xiaojukeji.com/\">滴滴</a>\n    <a href=\"http://nec.netease.com/\">网易</a>\n    <a href=\"http://ued.ctrip.com/blog/\">携程</a>\n    <a href=\"http://f2e.souche.com/\">大搜车</a>\n  </dd>\n</dl>\n<dl>\n  <dt>用户体验</dt>\n  <dd>\n    <a href=\"http://ued.taobao.org/blog/\">淘宝UED</a>\n    <a href=\"http://mux.baidu.com/\">百度MUX</a>\n    <a href=\"http://isux.tencent.com/\">腾讯isux</a>\n  </dd>\n</dl>\n<dl>\n  <dt>Related</dt>\n  <dd>\n    <a href=\"http://naotu.baidu.com/file/c104990f09f25683b5e9959abea92741?token=3d5cb6dc13c8fb1d\">ECMA</a>\n    <a href=\"http://naotu.baidu.com/file/ba2d1d4614374fc22bbcbccbd0d9def8?token=e0fab1102b584a7e\">DOM</a>\n    <a href=\"http://naotu.baidu.com/file/56445970f732df2593b8bcd56c05f744?token=44ac11c2809546cc\">BOM</a>\n    <a href=\"http://naotu.baidu.com/file/d852c8647372a1e00577134f94628e71?token=244754c6d4f44f96\">JavsScript</a>\n    <a href=\"http://naotu.baidu.com/file/1d05eeb342c21b3f897d5d8d13904689?token=2c73dd872ca8c708\">HTML5</a>\n    <a href=\"http://shuoshubao.lofter.com/\">Lofter</a>\n  </dd>\n</dl>\n",
    "assemble/About": "<dl>\n    <dt>QQ群</dt>\n    <dd>\n      <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=ed1824e8bb9c06fc15ec932fec7db2d52c0e69600c34465660e01816291ff321\">\n        <img src=\"https://shuoshubao.github.io/src/img/qq_group.png\" alt=\"北京Web前端 招聘 求职\" title=\"北京Web前端 招聘 求职\">\n      </a>\n    </dd>\n</dl>\n<dl>\n  <dt>QQ</dt>\n  <dd>\n    <a target=\"_blank\" href=\"http://sighttp.qq.com/authd?IDKEY=f1a72be1e21ea09e074076fcd2b0cf58fceb0095acb1a27a\">\n      <img src=\"https://shuoshubao.github.io/src/img/qq_talk.gif\" src=\"http://wpa.qq.com/imgd?IDKEY=f1a72be1e21ea09e074076fcd2b0cf58fceb0095acb1a27a&pic=51\" alt=\"点击这里给我发消息\" title=\"点击这里给我发消息\">\n    </a>\n  </dd>\n</dl>\n<dl>\n  <dt>Job</dt>\n  <dd>FE</dd>\n</dl>\n<dl>\n  <dt>Mobile</dt>\n  <dd>\n    <a href=\"tel:15901151120\">1590****120</a>\n  </dd>\n</dl>\n<dl>\n  <dt>Company</dt>\n  <dd>\n    <a href=\"http://www.meituan.com/\">Meituan.com</a>\n  </dd>\n</dl>\n"
}